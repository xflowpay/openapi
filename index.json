{
  "openapi": "3.0.0",
  "info": {
    "contact": {
      "email": "support@xflowpay.com",
      "name": "XFlow Support",
      "url": "https://xflowpay.com"
    },
    "description": "The XFlow REST API. Please see https://docs.xflowpay.com/2023-04-12/api for more details.",
    "termsOfService": "https://docs.xflowpay.com/platform-agreement",
    "title": "XFlow API",
    "version": "2023-04-12"
  },
  "servers": [
    {
      "url": "https://api.xflowpay.com/"
    }
  ],
  "paths": {
    "/v1/accounts": {
      "get": {
        "description": "Returns a list of accounts.",
        "operationId": "ListAccounts",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "This parameter represents the state of the `xflow_receive` addresses associated with this account. The valid values include `deactivated`, `requested`, `processing` and `activated`.",
            "in": "query",
            "name": "address",
            "required": false,
            "schema": {
              "items": {
                "enum": [
                  "deactivated",
                  "requested",
                  "processing",
                  "activated"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Return results where the `created` field is equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.eq",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is greater than the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.gt",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is greater than or equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.gte",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is lesser than the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.lt",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is lesser than or equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.lte",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object identifier that defines your place in the list. For instance, if you make a list request and receive 5 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A limit on the number of objects to be returned, between 1 and 10. If this parameter is not specified, a default value of 10 is assumed.",
            "examples": {
              "zero": {
                "value": 0
              },
              "max": {
                "value": 10
              }
            },
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Whether XFlow can send payouts to this account. This parameter can be set by XFlow for a direct user or by the platform on behalf of a connected user. The former is an XFlow account of `type=user` which is not connected to an account of `type=platform`.",
            "in": "query",
            "name": "payouts.enabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The reason code if payouts are not enabled. Valid values include `account_not_activated`, `platform_hold` and `xflow_hold`.",
            "in": "query",
            "name": "payouts.reason_code_not_enabled",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object identifier that defines your place in the list. For instance, if you make a list request and receive 5 objects, ending with `obj_bar`, your subsequent call can include `starting_after=obj_bar` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Valid status types associated with an XFlow account.",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "items": {
                "enum": [
                  "draft",
                  "verifying",
                  "activated",
                  "deactivated",
                  "hold"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Account types. These can be `partner`, `platform` or `user`.",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "enum": [
                "partner",
                "platform",
                "user"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/account"
                      },
                      "type": "array"
                    },
                    "has_next": {
                      "description": "True if this list has another page of items after this one that can be fetched.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    }
                  },
                  "title": "ListAccountsResponse",
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Accounts"
        ]
      },
      "post": {
        "description": "Create an account.",
        "operationId": "CreateAccount",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "business_details": {
                    "description": "Details about the business and activities that the account engages in.",
                    "properties": {
                      "dba": {
                        "description": "Doing Business As, this is a 16 character customer-facing business name. Special characters like <, >, ', or \" are not allowed.",
                        "type": "string"
                      },
                      "email": {
                        "description": "Email address.",
                        "format": "email",
                        "type": "string"
                      },
                      "ids": {
                        "description": "Details about identification documents.",
                        "properties": {
                          "business": {
                            "description": "Unique identification number.",
                            "type": "string"
                          },
                          "tax": {
                            "description": "Tax Identification Number (e.g. Business PAN for Indian merchants).",
                            "type": "string"
                          },
                          "tax_deduction": {
                            "description": "Tax deduction Account Number (e.g. TAN for Indian merchants).",
                            "type": "string"
                          },
                          "tax_gst": {
                            "description": "Goods & Services Tax (GST) ID.",
                            "type": "string"
                          },
                          "tax_trade": {
                            "description": "Trade Identification Number (e.g. IEC for Indian merchants).",
                            "type": "string"
                          }
                        },
                        "title": "CreateAccountRequestBusinessDetailsIds",
                        "type": "object"
                      },
                      "legal_name": {
                        "description": "Unique name as per official documents.",
                        "type": "string"
                      },
                      "physical_address": {
                        "description": "Details about the physical address.",
                        "properties": {
                          "city": {
                            "description": "City details in the official address.",
                            "type": "string"
                          },
                          "country": {
                            "description": "Country details in the [ISO 3166-1 alpha 2 code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) in uppercase.",
                            "enum": [
                              "AD",
                              "AE",
                              "AF",
                              "AG",
                              "AI",
                              "AL",
                              "AM",
                              "AO",
                              "AR",
                              "AT",
                              "AU",
                              "AW",
                              "AZ",
                              "BA",
                              "BB",
                              "BE",
                              "BF",
                              "BG",
                              "BH",
                              "BI",
                              "BJ",
                              "BM",
                              "BN",
                              "BO",
                              "BR",
                              "BS",
                              "BW",
                              "BZ",
                              "CA",
                              "CG",
                              "CH",
                              "CI",
                              "CL",
                              "CM",
                              "CN",
                              "CO",
                              "CR",
                              "CV",
                              "CY",
                              "CZ",
                              "DE",
                              "DJ",
                              "DK",
                              "DM",
                              "DO",
                              "DZ",
                              "EC",
                              "EE",
                              "EG",
                              "ER",
                              "ES",
                              "FI",
                              "FJ",
                              "FK",
                              "FO",
                              "FR",
                              "GA",
                              "GB",
                              "GD",
                              "GE",
                              "GF",
                              "GH",
                              "GI",
                              "GL",
                              "GM",
                              "GP",
                              "GQ",
                              "GR",
                              "GT",
                              "GU",
                              "GW",
                              "HK",
                              "HN",
                              "HR",
                              "HT",
                              "HU",
                              "ID",
                              "IE",
                              "IN",
                              "IL",
                              "IS",
                              "IT",
                              "JO",
                              "JP",
                              "KE",
                              "KG",
                              "KH",
                              "KI",
                              "KR",
                              "KW",
                              "KY",
                              "KZ",
                              "LA",
                              "LI",
                              "LR",
                              "LS",
                              "LT",
                              "LU",
                              "LV",
                              "MA",
                              "MC",
                              "MD",
                              "ME",
                              "MG",
                              "ML",
                              "MN",
                              "MO",
                              "MR",
                              "MT",
                              "MU",
                              "MW",
                              "MX",
                              "MY",
                              "MZ",
                              "NA",
                              "NE",
                              "NG",
                              "NL",
                              "NO",
                              "NZ",
                              "OM",
                              "PA",
                              "PE",
                              "PF",
                              "PG",
                              "PH",
                              "PL",
                              "PR",
                              "PS",
                              "PT",
                              "PY",
                              "QA",
                              "RE",
                              "RO",
                              "RS",
                              "SA",
                              "SE",
                              "SG",
                              "SI",
                              "SK",
                              "SL",
                              "SM",
                              "SN",
                              "SO",
                              "SS",
                              "SZ",
                              "TD",
                              "TG",
                              "TH",
                              "TJ",
                              "TL",
                              "TM",
                              "TN",
                              "TR",
                              "TT",
                              "TW",
                              "TZ",
                              "UA",
                              "UG",
                              "US",
                              "UY",
                              "VN",
                              "VU",
                              "ZA"
                            ],
                            "type": "string"
                          },
                          "line1": {
                            "description": "Line 1 in the official address.",
                            "type": "string"
                          },
                          "line2": {
                            "description": "Line 2 in the official address.",
                            "type": "string"
                          },
                          "postal_code": {
                            "description": "Postal code in the official address.",
                            "type": "string"
                          },
                          "state": {
                            "description": "State details in the official address.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "country"
                        ],
                        "title": "CreateAccountRequestBusinessDetailsPhysicalAddress",
                        "type": "object"
                      },
                      "product_description": {
                        "description": "Description of the account’s business activities.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Valid values include `company`, `limited_liability_partnership`, `partnership`, `sole_proprietor`, `individual`, `business` and `other`.",
                        "enum": [
                          "company",
                          "limited_liability_partnership",
                          "partnership",
                          "sole_proprietor",
                          "individual",
                          "business",
                          "other"
                        ],
                        "type": "string"
                      },
                      "website": {
                        "description": "The website for the business. Set to `website_not_available` if unavailable.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "email",
                      "legal_name",
                      "physical_address",
                      "type"
                    ],
                    "title": "CreateAccountRequestBusinessDetails",
                    "type": "object"
                  },
                  "fees": {
                    "description": "XFlow fees which are set by XFlow for a platform. These fees indicate what XFlow will charge the account for money movement.",
                    "properties": {
                      "fx_markup": {
                        "description": "FX markup is the XFlow markup over the mid-market FX rate.",
                        "type": "string"
                      },
                      "payout": {
                        "description": "Payout fee is the XFlow fee per payout.",
                        "properties": {
                          "fixed": {
                            "description": "Fixed payout fee details.",
                            "items": {
                              "properties": {
                                "amount": {
                                  "description": "Amount value that was charged by XFlow per payout.",
                                  "type": "string"
                                },
                                "currency": {
                                  "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the amount currency.",
                                  "enum": [
                                    "USD"
                                  ],
                                  "type": "string"
                                }
                              },
                              "title": "CreateAccountRequestFeesPayoutFixed",
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "minimum": {
                            "description": "Minimum payout fee details.",
                            "items": {
                              "properties": {
                                "amount": {
                                  "description": "Amount value that was charged by XFlow per payout.",
                                  "type": "string"
                                },
                                "currency": {
                                  "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the amount currency.",
                                  "enum": [
                                    "USD"
                                  ],
                                  "type": "string"
                                }
                              },
                              "title": "CreateAccountRequestFeesPayoutMinimum",
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "variable": {
                            "description": "This is the percentage value that is used to calculate the XFlow fee per payout.",
                            "type": "string"
                          }
                        },
                        "title": "CreateAccountRequestFeesPayout",
                        "type": "object"
                      }
                    },
                    "title": "CreateAccountRequestFees",
                    "type": "object"
                  },
                  "fees_passthrough": {
                    "description": "XFlow fees which are set on account of `type=platform` and passed onto the connected user by default (the platform has the option to mark up these fees for their connected users) during connected user creation.",
                    "properties": {
                      "fx_markup": {
                        "description": "FX markup is the XFlow markup over the mid-market FX rate.",
                        "type": "string"
                      },
                      "payout": {
                        "description": "Payout fee is the XFlow fee per payout.",
                        "properties": {
                          "fixed": {
                            "description": "Fixed payout fee details.",
                            "items": {
                              "properties": {
                                "amount": {
                                  "description": "Amount value that was charged by XFlow per payout.",
                                  "type": "string"
                                },
                                "currency": {
                                  "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the amount currency.",
                                  "enum": [
                                    "USD"
                                  ],
                                  "type": "string"
                                }
                              },
                              "title": "CreateAccountRequestFeesPassthroughPayoutFixed",
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "minimum": {
                            "description": "Minimum payout fee details.",
                            "items": {
                              "properties": {
                                "amount": {
                                  "description": "Amount value that was charged by XFlow per payout.",
                                  "type": "string"
                                },
                                "currency": {
                                  "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the amount currency.",
                                  "enum": [
                                    "USD"
                                  ],
                                  "type": "string"
                                }
                              },
                              "title": "CreateAccountRequestFeesPassthroughPayoutMinimum",
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "variable": {
                            "description": "This is the percentage value that is used to calculate the XFlow fee per payout.",
                            "type": "string"
                          }
                        },
                        "title": "CreateAccountRequestFeesPassthroughPayout",
                        "type": "object"
                      }
                    },
                    "title": "CreateAccountRequestFeesPassthrough",
                    "type": "object"
                  },
                  "logo_id": {
                    "description": "A [file object identifier](https://docs.xflowpay.com/2023-04-12/api#file_object_id) which contains a logo for the user to customize communications with their customers.",
                    "type": "string"
                  },
                  "metadata": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Set of [key-value pairs](https://docs.xflowpay.com/2023-04-12/api#metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                    "title": "CreateAccountRequestMetadata",
                    "type": "object"
                  },
                  "nickname": {
                    "description": "Name for the account.",
                    "type": "string"
                  },
                  "payouts": {
                    "description": "Payouts details.",
                    "properties": {
                      "enabled": {
                        "description": "Whether XFlow can send payouts to this account. This parameter can be set by XFlow for a direct user or by the platform on behalf of a connected user. The former is an XFlow account of `type=user` which is not connected to an account of `type=platform`.",
                        "type": "boolean"
                      },
                      "interval": {
                        "description": "How frequently funds will be paid out. One of `daily`, `weekly`, or `monthly`.",
                        "enum": [
                          "daily",
                          "weekly",
                          "monthly"
                        ],
                        "type": "string"
                      },
                      "monthly_anchor": {
                        "description": "The day of the month funds will be paid out. Only applies if interval is monthly. Payouts scheduled between the 29th and 31st of the month are sent on the last day of shorter months.",
                        "format": "int64",
                        "maximum": 31,
                        "minimum": 1,
                        "type": "integer"
                      },
                      "reason_code_not_enabled": {
                        "description": "The reason code if payouts are not enabled. Valid values include `account_not_activated`, `platform_hold` and `xflow_hold`.",
                        "type": "string"
                      },
                      "weekly_anchor": {
                        "description": "The day of the week funds will be paid out, of the style ‘monday’, ‘tuesday’, etc. Only applies if interval is `weekly`.",
                        "enum": [
                          "monday",
                          "tuesday",
                          "wednesday",
                          "thursday",
                          "friday",
                          "saturday",
                          "sunday"
                        ],
                        "type": "string"
                      }
                    },
                    "title": "CreateAccountRequestPayouts",
                    "type": "object"
                  },
                  "processing_fee_indicator": {
                    "description": "This is an account level setting which defines how fees associated with specific payment methods are split between the partner and the XFlow user. Valid values include `partner`, `shared` and `user`.",
                    "properties": {
                      "affirm": {
                        "enum": [
                          "partner",
                          "shared",
                          "user"
                        ],
                        "type": "string"
                      },
                      "afterpay": {
                        "enum": [
                          "partner",
                          "shared",
                          "user"
                        ],
                        "type": "string"
                      },
                      "check": {
                        "enum": [
                          "partner",
                          "shared",
                          "user"
                        ],
                        "type": "string"
                      },
                      "domestic_debit": {
                        "enum": [
                          "partner",
                          "shared",
                          "user"
                        ],
                        "type": "string"
                      },
                      "klarna": {
                        "enum": [
                          "partner",
                          "shared",
                          "user"
                        ],
                        "type": "string"
                      }
                    },
                    "title": "CreateAccountRequestProcessingFeeIndicator",
                    "type": "object"
                  },
                  "supporting_documentation": {
                    "description": "Details of the supporting documentation for the account.",
                    "properties": {
                      "id_document": {
                        "description": "A [file object identifier](https://docs.xflowpay.com/2023-04-12/api#file_object_id) which references a document that proves the authenticity of the account.",
                        "type": "string"
                      }
                    },
                    "title": "CreateAccountRequestSupportingDocumentation",
                    "type": "object"
                  },
                  "tos_acceptance": {
                    "description": "Details of account accepting terms of service (tos).",
                    "properties": {
                      "ip": {
                        "description": "IP address of the account from which the terms of service were accepted.",
                        "type": "string"
                      },
                      "time": {
                        "description": "The seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time) at which the terms of service was accepted.",
                        "format": "unix-time",
                        "type": "integer"
                      },
                      "user_agent": {
                        "description": "The user agent of the browser from which the account representative accepted their service agreement",
                        "type": "string"
                      }
                    },
                    "title": "CreateAccountRequestTosAcceptance",
                    "type": "object"
                  },
                  "type": {
                    "description": "Account types. These can be `partner`, `platform` or `user`.",
                    "enum": [
                      "partner",
                      "platform",
                      "user"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "business_details",
                  "type"
                ],
                "title": "CreateAccountRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Accounts"
        ]
      }
    },
    "/v1/accounts/{account}": {
      "get": {
        "description": "Retrieves the details of an account.",
        "operationId": "RetrieveAccount",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Accounts"
        ]
      },
      "post": {
        "description": "Update the details of an account.",
        "operationId": "UpdateAccount",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "business_details": {
                    "description": "Details about the business and activities that the account engages in.",
                    "properties": {
                      "dba": {
                        "description": "Doing Business As, this is a 16 character customer-facing business name. Special characters like <, >, ', or \" are not allowed.",
                        "type": "string"
                      },
                      "email": {
                        "description": "Email address.",
                        "format": "email",
                        "type": "string"
                      },
                      "ids": {
                        "description": "Details about identification documents.",
                        "properties": {
                          "business": {
                            "description": "Unique identification number.",
                            "type": "string"
                          },
                          "tax": {
                            "description": "Tax Identification Number (e.g. Business PAN for Indian merchants).",
                            "type": "string"
                          },
                          "tax_deduction": {
                            "description": "Tax deduction Account Number (e.g. TAN for Indian merchants).",
                            "type": "string"
                          },
                          "tax_gst": {
                            "description": "Goods & Services Tax (GST) ID.",
                            "type": "string"
                          },
                          "tax_trade": {
                            "description": "Trade Identification Number (e.g. IEC for Indian merchants).",
                            "type": "string"
                          }
                        },
                        "title": "UpdateAccountRequestBusinessDetailsIds",
                        "type": "object"
                      },
                      "legal_name": {
                        "description": "Unique name as per official documents.",
                        "type": "string"
                      },
                      "physical_address": {
                        "description": "Details about the physical address.",
                        "properties": {
                          "city": {
                            "description": "City details in the official address.",
                            "type": "string"
                          },
                          "country": {
                            "description": "Country details in the [ISO 3166-1 alpha 2 code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) in uppercase.",
                            "enum": [
                              "AD",
                              "AE",
                              "AF",
                              "AG",
                              "AI",
                              "AL",
                              "AM",
                              "AO",
                              "AR",
                              "AT",
                              "AU",
                              "AW",
                              "AZ",
                              "BA",
                              "BB",
                              "BE",
                              "BF",
                              "BG",
                              "BH",
                              "BI",
                              "BJ",
                              "BM",
                              "BN",
                              "BO",
                              "BR",
                              "BS",
                              "BW",
                              "BZ",
                              "CA",
                              "CG",
                              "CH",
                              "CI",
                              "CL",
                              "CM",
                              "CN",
                              "CO",
                              "CR",
                              "CV",
                              "CY",
                              "CZ",
                              "DE",
                              "DJ",
                              "DK",
                              "DM",
                              "DO",
                              "DZ",
                              "EC",
                              "EE",
                              "EG",
                              "ER",
                              "ES",
                              "FI",
                              "FJ",
                              "FK",
                              "FO",
                              "FR",
                              "GA",
                              "GB",
                              "GD",
                              "GE",
                              "GF",
                              "GH",
                              "GI",
                              "GL",
                              "GM",
                              "GP",
                              "GQ",
                              "GR",
                              "GT",
                              "GU",
                              "GW",
                              "HK",
                              "HN",
                              "HR",
                              "HT",
                              "HU",
                              "ID",
                              "IE",
                              "IN",
                              "IL",
                              "IS",
                              "IT",
                              "JO",
                              "JP",
                              "KE",
                              "KG",
                              "KH",
                              "KI",
                              "KR",
                              "KW",
                              "KY",
                              "KZ",
                              "LA",
                              "LI",
                              "LR",
                              "LS",
                              "LT",
                              "LU",
                              "LV",
                              "MA",
                              "MC",
                              "MD",
                              "ME",
                              "MG",
                              "ML",
                              "MN",
                              "MO",
                              "MR",
                              "MT",
                              "MU",
                              "MW",
                              "MX",
                              "MY",
                              "MZ",
                              "NA",
                              "NE",
                              "NG",
                              "NL",
                              "NO",
                              "NZ",
                              "OM",
                              "PA",
                              "PE",
                              "PF",
                              "PG",
                              "PH",
                              "PL",
                              "PR",
                              "PS",
                              "PT",
                              "PY",
                              "QA",
                              "RE",
                              "RO",
                              "RS",
                              "SA",
                              "SE",
                              "SG",
                              "SI",
                              "SK",
                              "SL",
                              "SM",
                              "SN",
                              "SO",
                              "SS",
                              "SZ",
                              "TD",
                              "TG",
                              "TH",
                              "TJ",
                              "TL",
                              "TM",
                              "TN",
                              "TR",
                              "TT",
                              "TW",
                              "TZ",
                              "UA",
                              "UG",
                              "US",
                              "UY",
                              "VN",
                              "VU",
                              "ZA"
                            ],
                            "type": "string"
                          },
                          "line1": {
                            "description": "Line 1 in the official address.",
                            "type": "string"
                          },
                          "line2": {
                            "description": "Line 2 in the official address.",
                            "type": "string"
                          },
                          "postal_code": {
                            "description": "Postal code in the official address.",
                            "type": "string"
                          },
                          "state": {
                            "description": "State details in the official address.",
                            "type": "string"
                          }
                        },
                        "title": "UpdateAccountRequestBusinessDetailsPhysicalAddress",
                        "type": "object"
                      },
                      "product_description": {
                        "description": "Description of the account’s business activities.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Valid values include `company`, `limited_liability_partnership`, `partnership`, `sole_proprietor`, `individual`, `business` and `other`.",
                        "enum": [
                          "company",
                          "limited_liability_partnership",
                          "partnership",
                          "sole_proprietor",
                          "individual",
                          "business",
                          "other"
                        ],
                        "type": "string"
                      },
                      "website": {
                        "description": "The website for the business. Set to `website_not_available` if unavailable.",
                        "type": "string"
                      }
                    },
                    "title": "UpdateAccountRequestBusinessDetails",
                    "type": "object"
                  },
                  "fees": {
                    "description": "XFlow fees which are set by XFlow for a platform. These fees indicate what XFlow will charge the account for money movement.",
                    "properties": {
                      "fx_markup": {
                        "description": "FX markup is the XFlow markup over the mid-market FX rate.",
                        "type": "string"
                      },
                      "payout": {
                        "description": "Payout fee is the XFlow fee per payout.",
                        "properties": {
                          "fixed": {
                            "description": "Fixed payout fee details.",
                            "items": {
                              "properties": {
                                "amount": {
                                  "description": "Amount value that was charged by XFlow per payout.",
                                  "type": "string"
                                },
                                "currency": {
                                  "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the amount currency.",
                                  "enum": [
                                    "USD"
                                  ],
                                  "type": "string"
                                }
                              },
                              "title": "UpdateAccountRequestFeesPayoutFixed",
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "minimum": {
                            "description": "Minimum payout fee details.",
                            "items": {
                              "properties": {
                                "amount": {
                                  "description": "Amount value that was charged by XFlow per payout.",
                                  "type": "string"
                                },
                                "currency": {
                                  "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the amount currency.",
                                  "enum": [
                                    "USD"
                                  ],
                                  "type": "string"
                                }
                              },
                              "title": "UpdateAccountRequestFeesPayoutMinimum",
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "variable": {
                            "description": "This is the percentage value that is used to calculate the XFlow fee per payout.",
                            "type": "string"
                          }
                        },
                        "title": "UpdateAccountRequestFeesPayout",
                        "type": "object"
                      }
                    },
                    "title": "UpdateAccountRequestFees",
                    "type": "object"
                  },
                  "fees_passthrough": {
                    "description": "XFlow fees which are set on account of `type=platform` and passed onto the connected user by default (the platform has the option to mark up these fees for their connected users) during connected user creation.",
                    "properties": {
                      "fx_markup": {
                        "description": "FX markup is the XFlow markup over the mid-market FX rate.",
                        "type": "string"
                      },
                      "payout": {
                        "description": "Payout fee is the XFlow fee per payout.",
                        "properties": {
                          "fixed": {
                            "description": "Fixed payout fee details.",
                            "items": {
                              "properties": {
                                "amount": {
                                  "description": "Amount value that was charged by XFlow per payout.",
                                  "type": "string"
                                },
                                "currency": {
                                  "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the amount currency.",
                                  "enum": [
                                    "USD"
                                  ],
                                  "type": "string"
                                }
                              },
                              "title": "UpdateAccountRequestFeesPassthroughPayoutFixed",
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "minimum": {
                            "description": "Minimum payout fee details.",
                            "items": {
                              "properties": {
                                "amount": {
                                  "description": "Amount value that was charged by XFlow per payout.",
                                  "type": "string"
                                },
                                "currency": {
                                  "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the amount currency.",
                                  "enum": [
                                    "USD"
                                  ],
                                  "type": "string"
                                }
                              },
                              "title": "UpdateAccountRequestFeesPassthroughPayoutMinimum",
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "variable": {
                            "description": "This is the percentage value that is used to calculate the XFlow fee per payout.",
                            "type": "string"
                          }
                        },
                        "title": "UpdateAccountRequestFeesPassthroughPayout",
                        "type": "object"
                      }
                    },
                    "title": "UpdateAccountRequestFeesPassthrough",
                    "type": "object"
                  },
                  "logo_id": {
                    "description": "A [file object identifier](https://docs.xflowpay.com/2023-04-12/api#file_object_id) which contains a logo for the user to customize communications with their customers.",
                    "type": "string"
                  },
                  "metadata": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Set of [key-value pairs](https://docs.xflowpay.com/2023-04-12/api#metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                    "title": "UpdateAccountRequestMetadata",
                    "type": "object"
                  },
                  "nickname": {
                    "description": "Name for the account.",
                    "type": "string"
                  },
                  "payouts": {
                    "description": "Payouts details.",
                    "properties": {
                      "enabled": {
                        "description": "Whether XFlow can send payouts to this account. This parameter can be set by XFlow for a direct user or by the platform on behalf of a connected user. The former is an XFlow account of `type=user` which is not connected to an account of `type=platform`.",
                        "type": "boolean"
                      },
                      "interval": {
                        "description": "How frequently funds will be paid out. One of `daily`, `weekly`, or `monthly`.",
                        "enum": [
                          "daily",
                          "weekly",
                          "monthly"
                        ],
                        "type": "string"
                      },
                      "monthly_anchor": {
                        "description": "The day of the month funds will be paid out. Only applies if interval is monthly. Payouts scheduled between the 29th and 31st of the month are sent on the last day of shorter months.",
                        "format": "int64",
                        "maximum": 31,
                        "minimum": 1,
                        "type": "integer"
                      },
                      "reason_code_not_enabled": {
                        "description": "The reason code if payouts are not enabled. Valid values include `account_not_activated`, `platform_hold` and `xflow_hold`.",
                        "type": "string"
                      },
                      "weekly_anchor": {
                        "description": "The day of the week funds will be paid out, of the style ‘monday’, ‘tuesday’, etc. Only applies if interval is `weekly`.",
                        "enum": [
                          "monday",
                          "tuesday",
                          "wednesday",
                          "thursday",
                          "friday",
                          "saturday",
                          "sunday"
                        ],
                        "type": "string"
                      }
                    },
                    "title": "UpdateAccountRequestPayouts",
                    "type": "object"
                  },
                  "processing_fee_indicator": {
                    "description": "This is an account level setting which defines how fees associated with specific payment methods are split between the partner and the XFlow user. Valid values include `partner`, `shared` and `user`.",
                    "properties": {
                      "affirm": {
                        "enum": [
                          "partner",
                          "shared",
                          "user"
                        ],
                        "type": "string"
                      },
                      "afterpay": {
                        "enum": [
                          "partner",
                          "shared",
                          "user"
                        ],
                        "type": "string"
                      },
                      "check": {
                        "enum": [
                          "partner",
                          "shared",
                          "user"
                        ],
                        "type": "string"
                      },
                      "domestic_debit": {
                        "enum": [
                          "partner",
                          "shared",
                          "user"
                        ],
                        "type": "string"
                      },
                      "klarna": {
                        "enum": [
                          "partner",
                          "shared",
                          "user"
                        ],
                        "type": "string"
                      }
                    },
                    "title": "UpdateAccountRequestProcessingFeeIndicator",
                    "type": "object"
                  },
                  "supporting_documentation": {
                    "description": "Details of the supporting documentation for the account.",
                    "properties": {
                      "id_document": {
                        "description": "A [file object identifier](https://docs.xflowpay.com/2023-04-12/api#file_object_id) which references a document that proves the authenticity of the account.",
                        "type": "string"
                      }
                    },
                    "title": "UpdateAccountRequestSupportingDocumentation",
                    "type": "object"
                  },
                  "tos_acceptance": {
                    "description": "Details of account accepting terms of service (tos).",
                    "properties": {
                      "ip": {
                        "description": "IP address of the account from which the terms of service were accepted.",
                        "type": "string"
                      },
                      "time": {
                        "description": "The seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time) at which the terms of service was accepted.",
                        "format": "unix-time",
                        "type": "integer"
                      },
                      "user_agent": {
                        "description": "The user agent of the browser from which the account representative accepted their service agreement",
                        "type": "string"
                      }
                    },
                    "title": "UpdateAccountRequestTosAcceptance",
                    "type": "object"
                  }
                },
                "title": "UpdateAccountRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Accounts"
        ]
      }
    },
    "/v1/accounts/{account}/activate": {
      "post": {
        "description": "Activates an account.",
        "operationId": "ActivateAccount",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Accounts"
        ]
      }
    },
    "/v1/accounts/{account}/deactivate": {
      "post": {
        "description": "Deactivates an account.",
        "operationId": "DeactivateAccount",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Accounts"
        ]
      }
    },
    "/v1/addresses": {
      "get": {
        "description": "Returns a list of addresses.",
        "operationId": "ListAddresses",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique identifier of an account object associated with this address.",
            "in": "query",
            "name": "account_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "XFlow categorization of destination (for a store of value).",
            "in": "query",
            "name": "category",
            "required": false,
            "schema": {
              "items": {
                "enum": [
                  "partner_payment",
                  "user_payout",
                  "xflow_checkout",
                  "xflow_fee_advance",
                  "xflow_receive"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Return results where the `created` field is equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.eq",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is greater than the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.gt",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is greater than or equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.gte",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is lesser than the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.lt",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is lesser than or equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.lte",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object identifier that defines your place in the list. For instance, if you make a list request and receive 5 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Indicates whether the addressable is reusable for ACH debit.",
            "in": "query",
            "name": "is_reusable",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "A limit on the number of objects to be returned, between 1 and 10. If this parameter is not specified, a default value of 10 is assumed.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object identifier that defines your place in the list. For instance, if you make a list request and receive 5 objects, ending with `obj_bar`, your subsequent call can include `starting_after=obj_bar` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Valid status types associated with an address.",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "items": {
                "enum": [
                  "activated",
                  "deactivated",
                  "expired",
                  "pending_deactivation"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Type of destination (for a store of value).",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "items": {
                "enum": [
                  "bank_account",
                  "wallet"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "This can be `affirm`, `afterpay` or `klarna`.",
            "in": "query",
            "name": "wallet.provider",
            "required": false,
            "schema": {
              "items": {
                "enum": [
                  "affirm",
                  "afterpay",
                  "klarna"
                ],
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/address"
                      },
                      "type": "array"
                    },
                    "has_next": {
                      "description": "True if this list has another page of items after this one that can be fetched.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    }
                  },
                  "title": "ListAddressesResponse",
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Addresses"
        ]
      },
      "post": {
        "description": "Create an address.",
        "operationId": "CreateAddress",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "account_id": {
                    "description": "Unique identifier of an account object associated with this address.",
                    "type": "string"
                  },
                  "bank_account": {
                    "description": "Bank account details.",
                    "properties": {
                      "domestic_credit": {
                        "description": "Represents the prefix associated with the bank account for a local ACH credit.",
                        "type": "string"
                      },
                      "number": {
                        "description": "Unique bank account number.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "domestic_credit",
                      "number"
                    ],
                    "title": "CreateAddressRequestBankAccount",
                    "type": "object"
                  },
                  "billing_details": {
                    "description": "Billing address.",
                    "properties": {
                      "city": {
                        "description": "City details in the official address.",
                        "type": "string"
                      },
                      "country": {
                        "description": "Country details in the [ISO 3166-1 alpha 2 code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) in uppercase.",
                        "enum": [
                          "IN"
                        ],
                        "type": "string"
                      },
                      "line1": {
                        "description": "Line 1 in the official address.",
                        "type": "string"
                      },
                      "line2": {
                        "description": "Line 2 in the official address.",
                        "type": "string"
                      },
                      "postal_code": {
                        "description": "Postal code in the official address.",
                        "type": "string"
                      },
                      "state": {
                        "description": "State details in the official address.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "country"
                    ],
                    "title": "CreateAddressRequestBillingDetails",
                    "type": "object"
                  },
                  "category": {
                    "description": "XFlow categorization of destination (for a store of value).",
                    "enum": [
                      "partner_payment",
                      "user_payout",
                      "xflow_checkout",
                      "xflow_fee_advance",
                      "xflow_receive"
                    ],
                    "type": "string"
                  },
                  "currency": {
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the amount currency.",
                    "enum": [
                      "INR",
                      "USD"
                    ],
                    "type": "string"
                  },
                  "metadata": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Set of [key-value pairs](https://docs.xflowpay.com/2023-04-12/api#metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                    "title": "CreateAddressRequestMetadata",
                    "type": "object"
                  },
                  "name": {
                    "description": "Name on the destination (for a store of value).",
                    "type": "string"
                  },
                  "supporting_documentation": {
                    "description": "Documents required to prove the authenticity of this destination (for a store of value).",
                    "properties": {
                      "id_document": {
                        "description": "A [file object identifier](https://docs.xflowpay.com/2023-04-12/api#file_object_id) which references a document that identifies this destination (for a store of value).",
                        "type": "string"
                      }
                    },
                    "title": "CreateAddressRequestSupportingDocumentation",
                    "type": "object"
                  },
                  "type": {
                    "description": "Type of destination (for a store of value). This can only be a `bank_account` for now.",
                    "enum": [
                      "bank_account"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "account_id",
                  "bank_account",
                  "billing_details",
                  "category",
                  "currency",
                  "name",
                  "type"
                ],
                "title": "CreateAddressRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/address"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Addresses"
        ]
      }
    },
    "/v1/addresses/{address}": {
      "get": {
        "description": "Retrieves the details of an address.",
        "operationId": "RetrieveAddress",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "address",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/address"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Addresses"
        ]
      },
      "post": {
        "description": "Update the details of an address.",
        "operationId": "UpdateAddress",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "address",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "metadata": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Set of [key-value pairs](https://docs.xflowpay.com/2023-04-12/api#metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                    "title": "UpdateAddressRequestMetadata",
                    "type": "object"
                  }
                },
                "title": "UpdateAddressRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/address"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Addresses"
        ]
      }
    },
    "/v1/balance": {
      "get": {
        "description": "Retrieve a balance.",
        "operationId": "RetrieveBalance",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique identifier for the account object for which this balance is associated. If this is not specified, then the balance object will be returned for the context that the user is in.",
            "in": "query",
            "name": "account_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/balance"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Balance"
        ]
      }
    },
    "/v1/balance/aggregate": {
      "get": {
        "description": "Retrieve an aggregate balance.",
        "operationId": "RetrieveAggregateBalance",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique identifier for the account object for which this balance is associated. If this is not specified, then the balance object will be returned for the context that the user is in.",
            "in": "query",
            "name": "account_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/balance"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Balance"
        ]
      }
    },
    "/v1/balance_transactions": {
      "get": {
        "description": "Returns a list of BalanceTransactions.",
        "operationId": "ListBalanceTransactions",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return results where the `created` field is equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.eq",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is greater than the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.gt",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is greater than or equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.gte",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is lesser than the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.lt",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is lesser than or equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.lte",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the amount currency.",
            "in": "query",
            "name": "currency",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object identifier that defines your place in the list. For instance, if you make a list request and receive 5 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A limit on the number of objects to be returned, between 1 and 10. If this parameter is not specified, a default value of 10 is assumed.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Unique identifier for the payment object associated with the BalanceTransaction.",
            "in": "query",
            "name": "payment_id",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object identifier that defines your place in the list. For instance, if you make a list request and receive 5 objects, ending with `obj_bar`, your subsequent call can include `starting_after=obj_bar` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/balance_transaction"
                      },
                      "type": "array"
                    },
                    "has_next": {
                      "description": "True if this list has another page of items after this one that can be fetched.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    }
                  },
                  "title": "ListBalanceTransactionsResponse",
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "BalanceTransactions"
        ]
      }
    },
    "/v1/balance_transactions/{balance_transaction}": {
      "get": {
        "description": "Retrieves the details of a BalanceTransaction.",
        "operationId": "RetrieveBalanceTransaction",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "balance_transaction",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "BalanceTransactions"
        ]
      }
    },
    "/v1/deposits": {
      "get": {
        "description": "Returns a list of deposits.",
        "operationId": "ListDeposits",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return results where the `created` field is equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.eq",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is greater than the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.gt",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is greater than or equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.gte",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is lesser than the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.lt",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is lesser than or equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.lte",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object identifier that defines your place in the list. For instance, if you make a list request and receive 5 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Account identifier for the account from which funds are being deposited. Refer [account object](https://docs.xflowpay.com/2023-04-12/api#accounts) for more details.",
            "in": "query",
            "name": "from.account_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Address identifier of the account from which funds are being deposited. Refer [address object](https://docs.xflowpay.com/2023-04-12/api#addresses) for more details.",
            "in": "query",
            "name": "from.address_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A limit on the number of objects to be returned, between 1 and 10. If this parameter is not specified, a default value of 10 is assumed.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Payment method via which funds were deposited.",
            "in": "query",
            "name": "payment_method",
            "required": false,
            "schema": {
              "items": {
                "enum": [
                  "affirm",
                  "afterpay",
                  "check",
                  "domestic_credit",
                  "domestic_debit",
                  "domestic_fast_credit",
                  "domestic_wire",
                  "global_wire",
                  "klarna"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Reason why the deposit was declined or disputed.",
            "in": "query",
            "name": "reason_code",
            "required": false,
            "schema": {
              "items": {
                "enum": [
                  "cancelled",
                  "duplicate",
                  "general",
                  "high_risk",
                  "incorrect_amount",
                  "poor_image_quality",
                  "unmatched_details"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object identifier that defines your place in the list. For instance, if you make a list request and receive 5 objects, ending with `obj_bar`, your subsequent call can include `starting_after=obj_bar` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Valid status types associated with deposit.",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "items": {
                "enum": [
                  "initialized",
                  "processing",
                  "completed",
                  "cancelled",
                  "failed"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Account identifier for the account to which funds are being deposited. Refer [account object](https://docs.xflowpay.com/2023-04-12/api#accounts) for more details.",
            "in": "query",
            "name": "to.account_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Address identifier of the account to which funds are being deposited. Refer [address object](https://docs.xflowpay.com/2023-04-12/api#addresses) for more details.",
            "in": "query",
            "name": "to.address_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/deposit"
                      },
                      "type": "array"
                    },
                    "has_next": {
                      "description": "True if this list has another page of items after this one that can be fetched.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    }
                  },
                  "title": "ListDepositsResponse",
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Deposits"
        ]
      },
      "post": {
        "description": "Create a deposit.",
        "operationId": "CreateDeposit",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "amount": {
                    "description": "Amount value that was deposited in XFlow. This value is negative in case of a dispute.",
                    "type": "string"
                  },
                  "currency": {
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the amount currency.",
                    "enum": [
                      "USD"
                    ],
                    "type": "string"
                  },
                  "from": {
                    "description": "Details of the account and address from which the funds are being deposited.",
                    "properties": {
                      "account_id": {
                        "description": "Account identifier for the account from which funds are being deposited. Refer [account object](https://docs.xflowpay.com/2023-04-12/api#accounts) for more details.",
                        "type": "string"
                      }
                    },
                    "title": "CreateDepositRequestFrom",
                    "type": "object"
                  },
                  "metadata": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Set of [key-value pairs](https://docs.xflowpay.com/2023-04-12/api#metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                    "title": "CreateDepositRequestMetadata",
                    "type": "object"
                  },
                  "payment_method": {
                    "description": "Payment method via which funds were deposited.",
                    "enum": [
                      "domestic_credit",
                      "domestic_fast_credit",
                      "domestic_wire",
                      "global_wire"
                    ],
                    "type": "string"
                  },
                  "statement_descriptor": {
                    "description": "Narration available on the incoming deposit.",
                    "type": "string"
                  },
                  "to": {
                    "description": "Details of the account and address to which the deposit is being made.",
                    "properties": {
                      "account_id": {
                        "description": "Account identifier for the account to which funds are being deposited. Refer [account object](https://docs.xflowpay.com/2023-04-12/api#accounts) for more details.",
                        "type": "string"
                      },
                      "address_id": {
                        "description": "Address identifier of the account to which funds are being deposited. Refer [address object](https://docs.xflowpay.com/2023-04-12/api#addresses) for more details.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "address_id"
                    ],
                    "title": "CreateDepositRequestTo",
                    "type": "object"
                  }
                },
                "required": [
                  "amount",
                  "currency",
                  "payment_method",
                  "to"
                ],
                "title": "CreateDepositRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deposit"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Deposits"
        ]
      }
    },
    "/v1/deposits/{deposit}": {
      "get": {
        "description": "Retrieves the details of a deposit.",
        "operationId": "RetrieveDeposit",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "deposit",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deposit"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Deposits"
        ]
      },
      "post": {
        "description": "Update the details of a deposit.",
        "operationId": "UpdateDeposit",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "deposit",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "metadata": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Set of [key-value pairs](https://docs.xflowpay.com/2023-04-12/api#metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                    "title": "UpdateDepositRequestMetadata",
                    "type": "object"
                  }
                },
                "title": "UpdateDepositRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deposit"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Deposits"
        ]
      }
    },
    "/v1/events": {
      "get": {
        "description": "Returns a list of events.",
        "operationId": "ListEvents",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier for the account to which the associated object that generated this event belongs. This can be passed only by an account of `type=platform`.",
            "in": "query",
            "name": "account_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return results where the `created` field is equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.eq",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is greater than the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.gt",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is greater than or equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.gte",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is lesser than the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.lt",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is lesser than or equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.lte",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object identifier that defines your place in the list. For instance, if you make a list request and receive 5 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A limit on the number of objects to be returned, between 1 and 10. If this parameter is not specified, a default value of 10 is assumed.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The identifier of the object that generated this event.",
            "in": "query",
            "name": "linked_id",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The type of the object that generated this event. This can be one of `account`, `address`, `deposit`, `receivable` or `payout`.",
            "in": "query",
            "name": "linked_object",
            "required": false,
            "schema": {
              "items": {
                "enum": [
                  "account",
                  "address",
                  "despoit",
                  "receivable",
                  "payout"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object identifier that defines your place in the list. For instance, if you make a list request and receive 5 objects, ending with `obj_bar`, your subsequent call can include `starting_after=obj_bar` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Description of the event (e.g., `deposit.status.completed`). You can find the full list of event types [here](https://docs.xflowpay.com/2023-04-12/api#types-of-events).",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "items": {
                "enum": [
                  "account.address.activated",
                  "account.payouts_enabled.updated",
                  "account.status.activated",
                  "account.status.hold",
                  "address.created",
                  "address.status.activated",
                  "address.status.deactivated",
                  "deposit.status.completed",
                  "payout.status.initialized",
                  "payout.status.processing",
                  "payout.status.settled",
                  "payout.status.failed",
                  "payout.payment_confirmation.updated",
                  "receivable.amount_reconciled.updated",
                  "receivable.amount_settled_payouts.updated",
                  "receivable.status.activated",
                  "receivable.status.cancelled",
                  "receivable.status.completed",
                  "receivable.status.hold",
                  "receivable.status.input_required",
                  "receivable.status.verifying"
                ],
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/event"
                      },
                      "type": "array"
                    },
                    "has_next": {
                      "description": "True if this list has another page of items after this one that can be fetched.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    }
                  },
                  "title": "ListEventsResponse",
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Events"
        ]
      }
    },
    "/v1/events/{event}": {
      "get": {
        "description": "Retrieves the details of an event.",
        "operationId": "RetrieveEvent",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "event",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/event"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Events"
        ]
      }
    },
    "/v1/exchange_rates": {
      "get": {
        "description": "Returns a list of ExchangeRates.",
        "operationId": "ListExchangeRates",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the buy amount currency.",
            "in": "query",
            "name": "buy.currency",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return results where the `created` field is equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.eq",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is greater than the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.gt",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is greater than or equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.gte",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is lesser than the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.lt",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is lesser than or equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.lte",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "The currency pair associated with buy and sell currencies.",
            "in": "query",
            "name": "currency_pair",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object identifier that defines your place in the list. For instance, if you make a list request and receive 5 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A limit on the number of objects to be returned, between 1 and 10. If this parameter is not specified, a default value of 10 is assumed.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Unique identifier for the payment object associated with the ExchangeRate.",
            "in": "query",
            "name": "payment_id",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object identifier that defines your place in the list. For instance, if you make a list request and receive 5 objects, ending with `obj_bar`, your subsequent call can include `starting_after=obj_bar` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the sell amount currency.",
            "in": "query",
            "name": "sell.currency",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/exchange_rate"
                      },
                      "type": "array"
                    },
                    "has_next": {
                      "description": "True if this list has another page of items after this one that can be fetched.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    }
                  },
                  "title": "ListExchangeRatesResponse",
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "ExchangeRates"
        ]
      }
    },
    "/v1/exchange_rates/{exchange_rate}": {
      "get": {
        "description": "Retrieves the details of an ExchangeRate.",
        "operationId": "RetrieveExchangeRate",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "exchange_rate",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exchange_rate"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "ExchangeRates"
        ]
      }
    },
    "/v1/files": {
      "get": {
        "description": "Returns a list of files.",
        "operationId": "ListFiles",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return results where the `created` field is equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.eq",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is greater than the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.gt",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is greater than or equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.gte",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is lesser than the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.lt",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is lesser than or equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.lte",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object identifier that defines your place in the list. For instance, if you make a list request and receive 5 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A limit on the number of objects to be returned, between 1 and 10. If this parameter is not specified, a default value of 10 is assumed.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Filtering on the following statuses is supported (you can also query for multiple statuses in the same query).",
            "in": "query",
            "name": "purpose",
            "required": false,
            "schema": {
              "items": {
                "enum": [
                  "additional_verification",
                  "finance_document",
                  "identity_document",
                  "logo",
                  "payout_confirmation",
                  "tax_document"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object identifier that defines your place in the list. For instance, if you make a list request and receive 5 objects, ending with `obj_bar`, your subsequent call can include `starting_after=obj_bar` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The type of the file: `jpeg`, `pdf` or `png`.",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "items": {
                "enum": [
                  "jpeg",
                  "pdf",
                  "png"
                ],
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/file_object"
                      },
                      "type": "array"
                    },
                    "has_next": {
                      "description": "True if this list has another page of items after this one that can be fetched.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    }
                  },
                  "title": "ListFilesResponse",
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Files"
        ]
      },
      "post": {
        "description": "Create a file.",
        "operationId": "CreateFile",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "file": {
                    "description": "A file to upload. The file should follow the specifications of [RFC 2388](https://datatracker.ietf.org/doc/html/rfc2388) (which defines file transfers for the multipart/form-data protocol).",
                    "format": "binary",
                    "type": "string"
                  },
                  "payload": {
                    "properties": {
                      "purpose": {
                        "description": "Purpose for uploading the file. The formats supported for all documents are of type `jpeg`, `pdf` and `png`. The maximum size allowed is 10MB. All documents are downloadable and never expire.",
                        "enum": [
                          "additional_verification",
                          "finance_document",
                          "identity_document",
                          "logo",
                          "payout_confirmation",
                          "tax_document"
                        ],
                        "type": "string"
                      }
                    },
                    "format": "binary",
                    "title": "CreateFileRequestPayload",
                    "type": "object"
                  }
                },
                "required": [
                  "file",
                  "payload"
                ],
                "title": "CreateFileRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/file_object"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Files"
        ]
      }
    },
    "/v1/files/{file}": {
      "get": {
        "description": "Retrieves the details of a file.",
        "operationId": "RetrieveFile",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "file",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/file_object"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Files"
        ]
      },
      "post": {
        "description": "Update the details of a file.",
        "operationId": "UpdateFile",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "file",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "metadata": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Set of [key-value pairs](https://docs.xflowpay.com/2023-04-12/api#metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                    "title": "UpdateFileRequestMetadata",
                    "type": "object"
                  }
                },
                "title": "UpdateFileRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/file_object"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Files"
        ]
      }
    },
    "/v1/files/{file}/contents": {
      "get": {
        "description": "Download a file.",
        "operationId": "DownloadFile",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "file",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "content-disposition": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "image/png": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Files"
        ]
      }
    },
    "/v1/payment_links": {
      "get": {
        "description": "Returns a list of PaymentLinks.",
        "operationId": "ListPaymentLinks",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique identifier for the account object associated with the PaymentLink.",
            "in": "query",
            "name": "account_id",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Return results where the `created` field is equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.eq",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is greater than the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.gt",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is greater than or equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.gte",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is lesser than the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.lt",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is lesser than or equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.lte",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object identifier that defines your place in the list. For instance, if you make a list request and receive 5 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return results where the `expires_at` field is equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time). Objects returned as part of this list query are sorted in ascending order based on the `expires_at` parameter.",
            "in": "query",
            "name": "expires_at.eq",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `expires_at` field is greater than the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "expires_at.gt",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `expires_at` field is greater than or equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "expires_at.gte",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `expires_at` field is lesser than the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "expires_at.lt",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `expires_at` field is lesser than or equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "expires_at.lte",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "A limit on the number of objects to be returned, between 1 and 10. If this parameter is not specified, a default value of 10 is assumed.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Array of unique identifiers of the receivable objects associated with the PaymentLink. Currently you can have only one receivable associated with a PaymentLink object.",
            "in": "query",
            "name": "receiveble_ids",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object identifier that defines your place in the list. For instance, if you make a list request and receive 5 objects, ending with `obj_bar`, your subsequent call can include `starting_after=obj_bar` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Valid status associated with PaymentLinks.",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "items": {
                "enum": [
                  "activated",
                  "deactivated",
                  "expired"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The type of PaymentLink object used for accepting payments against a receivable object.",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "items": {
                "enum": [
                  "receivable"
                ],
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/payment_link"
                      },
                      "type": "array"
                    },
                    "has_next": {
                      "description": "True if this list has another page of items after this one that can be fetched.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    }
                  },
                  "title": "ListPaymentLinksResponse",
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "PaymentLinks"
        ]
      },
      "post": {
        "description": "Create a PaymentLink.",
        "operationId": "CreatePaymentLink",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "account_id": {
                    "description": "Unique identifier for the account object associated with the PaymentLink.",
                    "type": "string"
                  },
                  "metadata": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Set of [key-value pairs](https://docs.xflowpay.com/2023-04-12/api#metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                    "title": "CreatePaymentLinkRequestMetadata",
                    "type": "object"
                  },
                  "receivable_ids": {
                    "description": "Array of unique identifiers of the receivable objects associated with the PaymentLink. Currently you can have only one receivable associated with a PaymentLink object.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "type": {
                    "description": "The type of PaymentLink object used for accepting payments against a receivable object.",
                    "enum": [
                      "receivable"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "account_id",
                  "receivable_ids",
                  "type"
                ],
                "title": "CreatePaymentLinkRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payment_link"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "PaymentLinks"
        ]
      }
    },
    "/v1/payment_links/{payment_link}": {
      "get": {
        "description": "Retrieves the details of a PaymentLink.",
        "operationId": "RetrievePaymentLink",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "payment_link",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payment_link"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "PaymentLinks"
        ]
      },
      "post": {
        "description": "Update the details of a PaymentLink.",
        "operationId": "UpdatePaymentLink",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "payment_link",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "metadata": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Set of [key-value pairs](https://docs.xflowpay.com/2023-04-12/api#metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                    "title": "UpdatePaymentLinkRequestMetadata",
                    "type": "object"
                  }
                },
                "title": "UpdatePaymentLinkRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payment_link"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "PaymentLinks"
        ]
      }
    },
    "/v1/payment_links/{payment_link}/activate": {
      "post": {
        "description": "Activate a PaymentLink.",
        "operationId": "ActivatePaymentLink",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "payment_link",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payment_link"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "PaymentLinks"
        ]
      }
    },
    "/v1/payment_links/{payment_link}/deactivate": {
      "post": {
        "description": "Deactivate a PaymentLink.",
        "operationId": "DeactivatePaymentLink",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "payment_link",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payment_link"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "PaymentLinks"
        ]
      }
    },
    "/v1/payment_links/{payment_link}/expire": {
      "post": {
        "description": "Expire a PaymentLink.",
        "operationId": "ExpirePaymentLink",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "payment_link",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payment_link"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "PaymentLinks"
        ]
      }
    },
    "/v1/payment_links/{payment_link}/extend": {
      "post": {
        "description": "Extend a PaymentLink.",
        "operationId": "ExtendPaymentLink",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "payment_link",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payment_link"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "PaymentLinks"
        ]
      }
    },
    "/v1/payments": {
      "get": {
        "description": "Returns a list of payments.",
        "operationId": "ListPayments",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return results where the `created` field is equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.eq",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is greater than the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.gt",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is greater than or equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.gte",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is lesser than the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.lt",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is lesser than or equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.lte",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object identifier that defines your place in the list. For instance, if you make a list request and receive 5 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A limit on the number of objects to be returned, between 1 and 10. If this parameter is not specified, a default value of 10 is assumed.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object identifier that defines your place in the list. For instance, if you make a list request and receive 5 objects, ending with `obj_bar`, your subsequent call can include `starting_after=obj_bar` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/payment"
                      },
                      "type": "array"
                    },
                    "has_next": {
                      "description": "True if this list has another page of items after this one that can be fetched.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    }
                  },
                  "title": "ListPaymentsResponse",
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Payments"
        ]
      }
    },
    "/v1/payments/{payment}": {
      "get": {
        "description": "Retrieves the details of a payment.",
        "operationId": "RetrievePayment",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "payment",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payment"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Payments"
        ]
      }
    },
    "/v1/payouts": {
      "get": {
        "description": "Returns a list of payouts.",
        "operationId": "ListPayouts",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return results where the `created` field is equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.eq",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is greater than the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.gt",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is greater than or equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.gte",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is lesser than the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.lt",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is lesser than or equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.lte",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object identifier that defines your place in the list. For instance, if you make a list request and receive 5 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A limit on the number of objects to be returned, between 1 and 10. If this parameter is not specified, a default value of 10 is assumed.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object identifier that defines your place in the list. For instance, if you make a list request and receive 5 objects, ending with `obj_bar`, your subsequent call can include `starting_after=obj_bar` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/payout"
                      },
                      "type": "array"
                    },
                    "has_next": {
                      "description": "True if this list has another page of items after this one that can be fetched.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    }
                  },
                  "title": "ListPayoutsResponse",
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Payouts"
        ]
      }
    },
    "/v1/payouts/{payout}": {
      "get": {
        "description": "Retrieves the details of a payout.",
        "operationId": "RetrievePayout",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "payout",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payout"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Payouts"
        ]
      },
      "post": {
        "description": "Update the details of a payout.",
        "operationId": "UpdatePayout",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "payout",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "metadata": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Set of [key-value pairs](https://docs.xflowpay.com/2023-04-12/api#metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                    "title": "UpdatePayoutRequestMetadata",
                    "nullable": true,
                    "type": "object"
                  }
                },
                "title": "UpdatePayoutRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payout"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Payouts"
        ]
      }
    },
    "/v1/persons": {
      "get": {
        "description": "Returns a list of persons.",
        "operationId": "ListPersons",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return results where the `created` field is equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.eq",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is greater than the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.gt",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is greater than or equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.gte",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is lesser than the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.lt",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is lesser than or equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.lte",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object identifier that defines your place in the list. For instance, if you make a list request and receive 5 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A limit on the number of objects to be returned, between 1 and 10. If this parameter is not specified, a default value of 10 is assumed.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object identifier that defines your place in the list. For instance, if you make a list request and receive 5 objects, ending with `obj_bar`, your subsequent call can include `starting_after=obj_bar` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/person"
                      },
                      "type": "array"
                    },
                    "has_next": {
                      "description": "True if this list has another page of items after this one that can be fetched.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    }
                  },
                  "title": "ListPersonsResponse",
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Persons"
        ]
      },
      "post": {
        "description": "Create a person.",
        "operationId": "CreatePerson",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "full_name": {
                    "description": "Full name (i.e first name followed by the last name) of the person.",
                    "type": "string"
                  },
                  "relationship": {
                    "description": "Relationship of the person with the account.",
                    "properties": {
                      "director": {
                        "description": "`true` if the person is the director of the account entity, `false` otherwise.",
                        "type": "boolean"
                      },
                      "owner": {
                        "description": "`true` if the person is the owner of the account entity, `false` otherwise.",
                        "type": "boolean"
                      },
                      "representative": {
                        "description": "`true` if the person is the representative of the account entity, `false` otherwise.",
                        "type": "boolean"
                      }
                    },
                    "title": "CreatePersonRequestRelationship",
                    "type": "object"
                  },
                  "supporting_documentation": {
                    "description": "Documents required to prove relationship of the person with the account.",
                    "properties": {
                      "id_document": {
                        "description": "File identifier of the document that identifies this person. This can be a tax document like a PAN card (set `file.purpose` to `identity_document` during file creation) or an alternate document like a passport (set `file.purpose` to `additional_verification`).",
                        "type": "string"
                      }
                    },
                    "required": [
                      "id_document"
                    ],
                    "title": "CreatePersonRequestSupportingDocumentation",
                    "type": "object"
                  },
                  "supporting_ids": {
                    "description": "Details about identification documents.",
                    "properties": {
                      "tax": {
                        "description": "Tax Identification Number (e.g. PAN for Indian individuals).",
                        "type": "string"
                      }
                    },
                    "title": "CreatePersonRequestSupportingIds",
                    "type": "object"
                  }
                },
                "required": [
                  "relationship",
                  "supporting_documentation",
                  "type"
                ],
                "title": "CreatePersonRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/person"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Persons"
        ]
      }
    },
    "/v1/persons/{person}": {
      "get": {
        "description": "Retrieves the details of a person.",
        "operationId": "RetrievePerson",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/person"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Persons"
        ]
      },
      "post": {
        "description": "Update the details of a person.",
        "operationId": "UpdatePerson",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "full_name": {
                    "description": "Full name (i.e first name followed by the last name) of the person.",
                    "type": "string"
                  },
                  "relationship": {
                    "description": "Relationship of the person with the account.",
                    "properties": {
                      "director": {
                        "description": "`true` if the person is the director of the account entity, `false` otherwise.",
                        "type": "boolean"
                      },
                      "owner": {
                        "description": "`true` if the person is the owner of the account entity, `false` otherwise.",
                        "type": "boolean"
                      },
                      "representative": {
                        "description": "`true` if the person is the representative of the account entity, `false` otherwise.",
                        "type": "boolean"
                      }
                    },
                    "title": "UpdatePersonRequestRelationship",
                    "type": "object"
                  },
                  "supporting_documentation": {
                    "description": "Documents required to prove relationship of the person with the account.",
                    "properties": {
                      "id_document": {
                        "description": "File identifier of the document that identifies this person. This can be a tax document like a PAN card (set `file.purpose` to `identity_document` during file creation) or an alternate document like a passport (set `file.purpose` to `additional_verification`).",
                        "type": "string"
                      }
                    },
                    "required": [
                      "id_document"
                    ],
                    "title": "UpdatePersonRequestSupportingDocumentation",
                    "type": "object"
                  },
                  "supporting_ids": {
                    "description": "Details about identification documents.",
                    "properties": {
                      "tax": {
                        "description": "Tax Identification Number (e.g. PAN for Indian individuals).",
                        "type": "string"
                      }
                    },
                    "title": "UpdatePersonRequestSupportingIds",
                    "type": "object"
                  }
                },
                "title": "UpdatePersonRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/person"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Persons"
        ]
      },
      "delete": {
        "description": "Delete a person.",
        "operationId": "DeletePerson",
        "parameters": [
          {
            "in": "path",
            "name": "person",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/person"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Persons"
        ]
      }
    },
    "/v1/quotes": {
      "get": {
        "description": "Retrieve a quote.",
        "operationId": "RetrieveQuote",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Buy amount value.",
            "in": "query",
            "name": "buy.amount",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the buy currency.",
            "in": "query",
            "name": "buy.currency",
            "required": true,
            "schema": {
              "enum": [
                "INR"
              ],
              "type": "string"
            }
          },
          {
            "description": "Sell amount value.",
            "in": "query",
            "name": "sell.amount",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the sell currency.",
            "in": "query",
            "name": "sell.currency",
            "required": true,
            "schema": {
              "enum": [
                "USD"
              ],
              "type": "string"
            }
          },
          {
            "description": "Valid quote types.",
            "in": "query",
            "name": "type",
            "required": true,
            "schema": {
              "enum": [
                "payout_fx"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Quotes"
        ]
      }
    },
    "/v1/receivables": {
      "get": {
        "description": "Returns a list of receivables.",
        "operationId": "ListReceivables",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return results where the `created` field is equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.eq",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is greater than the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.gt",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is greater than or equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.gte",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is lesser than the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.lt",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is lesser than or equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.lte",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object identifier that defines your place in the list. For instance, if you make a list request and receive 5 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A limit on the number of objects to be returned, between 1 and 10. If this parameter is not specified, a default value of 10 is assumed.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object identifier that defines your place in the list. For instance, if you make a list request and receive 5 objects, ending with `obj_bar`, your subsequent call can include `starting_after=obj_bar` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/receivable"
                      },
                      "type": "array"
                    },
                    "has_next": {
                      "description": "True if this list has another page of items after this one that can be fetched.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    }
                  },
                  "title": "ListReceivablesResponse",
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Receivables"
        ]
      },
      "post": {
        "description": "Create a receivable.",
        "operationId": "CreateReceivable",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "account_id": {
                    "description": "Unique identifier for the account object of `type=partner`.",
                    "type": "string"
                  },
                  "amount_maximum_reconcilable": {
                    "description": "Maximum amount value that can be reconciled. This field can be edited by the user.",
                    "type": "string"
                  },
                  "currency": {
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the amount currency.",
                    "enum": [
                      "USD"
                    ],
                    "type": "string"
                  },
                  "description": {
                    "description": "Represents an array of deposit objects due to which amount is locked.",
                    "type": "string"
                  },
                  "invoice": {
                    "description": "Relationship of the person with the account.",
                    "properties": {
                      "amount": {
                        "description": "Total amount value on the invoice.",
                        "type": "string"
                      },
                      "creation_date": {
                        "description": "The date on which the invoice was created in YYYY-MM-DD format.",
                        "type": "string"
                      },
                      "currency": {
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the amount currency.",
                        "type": "string"
                      },
                      "document": {
                        "description": "Represents a file object with invoice details.",
                        "type": "string"
                      },
                      "due_date": {
                        "description": "The date on which the invoice amount is due in YYYY-MM-DD format.",
                        "type": "string"
                      },
                      "reference_number": {
                        "description": "Unique identification number on the invoice.",
                        "type": "string"
                      }
                    },
                    "title": "CreateReceivableRequestInvoice",
                    "type": "object"
                  },
                  "metadata": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Set of [key-value pairs](https://docs.xflowpay.com/2023-04-12/api#metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                    "title": "CreateReceivableRequestMetadata",
                    "type": "object"
                  },
                  "purpose_code": {
                    "description": "[Purpose codes](https://www.rbi.org.in/upload/notification/pdfs/52220.pdf) defined by the Financial Regulator for cross-border transactions.",
                    "type": "string"
                  },
                  "purpose_code_description": {
                    "description": "Description of the purpose code.",
                    "type": "string"
                  },
                  "transaction_type": {
                    "description": "Receivable transaction type.",
                    "enum": [
                      "goods",
                      "services",
                      "software"
                    ],
                    "type": "string"
                  }
                },
                "title": "CreateReceivableRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/receivable"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Receivables"
        ]
      }
    },
    "/v1/receivables/{receivable}": {
      "get": {
        "description": "Retrieves the details of a receivable.",
        "operationId": "RetrieveReceivable",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "receivable",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/receivable"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Receivables"
        ]
      },
      "post": {
        "description": "Update the details of a receivable.",
        "operationId": "UpdateReceivable",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "receivable",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "account_id": {
                    "description": "Unique identifier for the account object of `type=partner`.",
                    "type": "string"
                  },
                  "amount_maximum_reconcilable": {
                    "description": "Maximum amount value that can be reconciled. This field can be edited by the user.",
                    "type": "string"
                  },
                  "currency": {
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the amount currency.",
                    "enum": [
                      "USD"
                    ],
                    "type": "string"
                  },
                  "description": {
                    "description": "Represents an array of deposit objects due to which amount is locked.",
                    "type": "string"
                  },
                  "invoice": {
                    "description": "Relationship of the person with the account.",
                    "properties": {
                      "amount": {
                        "description": "Total amount value on the invoice.",
                        "type": "string"
                      },
                      "creation_date": {
                        "description": "The date on which the invoice was created in YYYY-MM-DD format.",
                        "type": "string"
                      },
                      "currency": {
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the amount currency.",
                        "type": "string"
                      },
                      "document": {
                        "description": "Represents a file object with invoice details.",
                        "type": "string"
                      },
                      "due_date": {
                        "description": "The date on which the invoice amount is due in YYYY-MM-DD format.",
                        "type": "string"
                      },
                      "reference_number": {
                        "description": "Unique identification number on the invoice.",
                        "type": "string"
                      }
                    },
                    "title": "UpdateReceivableRequestInvoice",
                    "type": "object"
                  },
                  "metadata": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Set of [key-value pairs](https://docs.xflowpay.com/2023-04-12/api#metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                    "title": "UpdateReceivableRequestMetadata",
                    "type": "object"
                  },
                  "purpose_code": {
                    "description": "[Purpose codes](https://www.rbi.org.in/upload/notification/pdfs/52220.pdf) defined by the Financial Regulator for cross-border transactions.",
                    "type": "string"
                  },
                  "purpose_code_description": {
                    "description": "Description of the purpose code.",
                    "type": "string"
                  },
                  "transaction_type": {
                    "description": "Receivable transaction type.",
                    "enum": [
                      "goods",
                      "services",
                      "software"
                    ],
                    "type": "string"
                  }
                },
                "title": "UpdateReceivableRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/receivable"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Receivables"
        ]
      }
    },
    "/v1/receivables/{receivable}/confirm": {
      "post": {
        "description": "Confirm the details of a receivable.",
        "operationId": "ConfirmReceivable",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "receivable",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/receivable"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Receivables"
        ]
      }
    },
    "/v1/receivables/{receivable}/cancel": {
      "post": {
        "description": "Cancel a receivable.",
        "operationId": "CancelReceivable",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "receivable",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/receivable"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Receivables"
        ]
      }
    },
    "/v1/receivables/{receivable}/reconcile": {
      "post": {
        "description": "Reconcile a receivable.",
        "operationId": "ReconcileReceivable",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "receivable",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/receivable"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Receivables"
        ]
      }
    },
    "/v1/transfers": {
      "get": {
        "description": "Returns a list of transfers.",
        "operationId": "ListTransfers",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return results where the `created` field is equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.eq",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is greater than the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.gt",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is greater than or equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.gte",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is lesser than the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.lt",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is lesser than or equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.lte",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object identifier that defines your place in the list. For instance, if you make a list request and receive 5 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A limit on the number of objects to be returned, between 1 and 10. If this parameter is not specified, a default value of 10 is assumed.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object identifier that defines your place in the list. For instance, if you make a list request and receive 5 objects, ending with `obj_bar`, your subsequent call can include `starting_after=obj_bar` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/transfer"
                      },
                      "type": "array"
                    },
                    "has_next": {
                      "description": "True if this list has another page of items after this one that can be fetched.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    }
                  },
                  "title": "ListTransfersResponse",
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Transfers"
        ]
      },
      "post": {
        "description": "Create a transfer.",
        "operationId": "CreateTransfer",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "amount": {
                    "description": "Amount value that will be deposited at the destination.",
                    "type": "string"
                  },
                  "currency": {
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the amount currency.",
                    "enum": [
                      "USD"
                    ],
                    "type": "string"
                  },
                  "description": {
                    "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
                    "type": "string"
                  },
                  "from": {
                    "description": "Details of the account and address from which the funds are being transferred.",
                    "properties": {
                      "account_id": {
                        "description": "Account identifier for the account from which funds are being transferred. Refer [account object](https://docs.xflowpay.com/2023-04-12/api#accounts) for more details.",
                        "type": "string"
                      },
                      "address_id": {
                        "description": "Address identifier of the account from which funds are being transferred. Refer [address object](https://docs.xflowpay.com/2023-04-12/api#addresses) for more details.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "account_id"
                    ],
                    "title": "CreateTransferRequestFrom",
                    "type": "object"
                  },
                  "metadata": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Set of [key-value pairs](https://docs.xflowpay.com/2023-04-12/api#metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                    "title": "CreateTransferRequestMetadata",
                    "type": "object"
                  },
                  "to": {
                    "description": "Details of the account and address to which the transfer is being made.",
                    "properties": {
                      "account_id": {
                        "description": "Account identifier for the account to which funds are being transferred. Refer [account object](https://docs.xflowpay.com/2023-04-12/api#accounts) for more details.",
                        "type": "string"
                      },
                      "address_id": {
                        "description": "Address identifier of the account to which funds are being transferred. Refer [address object](https://docs.xflowpay.com/2023-04-12/api#addresses) for more details.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "account_id"
                    ],
                    "title": "CreateTransferRequestTo",
                    "type": "object"
                  }
                },
                "required": [
                  "amount",
                  "currency",
                  "fromt",
                  "to",
                  "type"
                ],
                "title": "CreateTransferRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/transfer"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Transfers"
        ]
      }
    },
    "/v1/transfers/{transfer}": {
      "get": {
        "description": "Retrieves the details of a transfer.",
        "operationId": "RetrieveTransfer",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "transfer",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/transfer"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Transfers"
        ]
      },
      "post": {
        "description": "Update the details of a transfer.",
        "operationId": "UpdateTransfer",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "transfer",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "description": {
                    "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
                    "type": "string"
                  },
                  "metadata": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Set of [key-value pairs](https://docs.xflowpay.com/2023-04-12/api#metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                    "title": "CreateTransferRequestMetadata",
                    "type": "object"
                  }
                },
                "title": "UpdateTransferRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/transfer"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "Transfers"
        ]
      }
    },
    "/v1/webhook_endpoints": {
      "get": {
        "description": "Returns a list of WebhookEndpoints.",
        "operationId": "ListWebhookEndpoints",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return results where the `created` field is equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.eq",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is greater than the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.gt",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is greater than or equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.gte",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is lesser than the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.lt",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "Return results where the `created` field is lesser than or equal to the timestamp value in seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "created.lte",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            }
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object identifier that defines your place in the list. For instance, if you make a list request and receive 5 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A limit on the number of objects to be returned, between 1 and 10. If this parameter is not specified, a default value of 10 is assumed.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object identifier that defines your place in the list. For instance, if you make a list request and receive 5 objects, ending with `obj_bar`, your subsequent call can include `starting_after=obj_bar` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/webhook_endpoint"
                      },
                      "type": "array"
                    },
                    "has_next": {
                      "description": "True if this list has another page of items after this one that can be fetched.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    }
                  },
                  "title": "ListWebhookEndpointsResponse",
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "WebhookEndpoints"
        ]
      },
      "post": {
        "description": "Create a WebhookEndpoint.",
        "operationId": "CreateWebhookEndpoint",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "description": {
                    "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
                    "type": "string"
                  },
                  "enabled_events": {
                    "description": "The list of events to enable for this endpoint. [’*’] indicates that all events are enabled.",
                    "maxItems": 1,
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "metadata": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Set of [key-value pairs](https://docs.xflowpay.com/2023-04-12/api#metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                    "title": "CreateWebhookEndpointRequestMetadata",
                    "type": "object"
                  },
                  "platform": {
                    "description": "If `true`, the webhook endpoint will receive events for the platform. Else if `false`, the webhook endpoint will receive events for direct or connected users.",
                    "type": "boolean"
                  },
                  "url": {
                    "description": "The https URL of the webhook endpoint.",
                    "type": "string"
                  }
                },
                "required": [
                  "enabled_events",
                  "url"
                ],
                "title": "CreateWebhookEndpointRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webhook_endpoint"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "WebhookEndpoints"
        ]
      }
    },
    "/v1/webhook_endpoints/{webhook_endpoint}": {
      "get": {
        "description": "Retrieves the details of a WebhookEndpoint.",
        "operationId": "RetrieveWebhookEndpoint",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "webhook_endpoint",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webhook_endpoint"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "WebhookEndpoints"
        ]
      },
      "post": {
        "description": "Update the details of a WebhookEndpoint.",
        "operationId": "UpdateWebhookEndpoint",
        "parameters": [
          {
            "description": "This header specifies the connected user's account on behalf of which the request is being made.",
            "in": "header",
            "name": "XFlow-Account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "webhook_endpoint",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "description": {
                    "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
                    "type": "string"
                  },
                  "enabled_events": {
                    "description": "The list of events to enable for this endpoint. [’*’] indicates that all events are enabled.",
                    "maxItems": 1,
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "metadata": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Set of [key-value pairs](https://docs.xflowpay.com/2023-04-12/api#metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                    "title": "UpdateWebhookEndpointRequestMetadata",
                    "type": "object"
                  },
                  "platform": {
                    "description": "If `true`, the webhook endpoint will receive events for the platform. Else if `false`, the webhook endpoint will receive events for direct or connected users.",
                    "type": "boolean"
                  },
                  "url": {
                    "description": "The https URL of the webhook endpoint.",
                    "type": "string"
                  }
                },
                "title": "UpdateWebhookEndpointRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webhook_endpoint"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "WebhookEndpoints"
        ]
      }
    },
    "/v1/webhook_endpoints/{webhook_endpoint}/activate": {
      "post": {
        "description": "Activate the details of a WebhookEndpoint.",
        "operationId": "ActivateWebhookEndpoint",
        "parameters": [
          {
            "in": "path",
            "name": "webhook_endpoint",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webhook_endpoint"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "WebhookEndpoints"
        ]
      }
    },
    "/v1/webhook_endpoints/{webhook_endpoint}/deactivate": {
      "post": {
        "description": "Deactivate a WebhookEndpoint.",
        "operationId": "DeactivateWebhookEndpoint",
        "parameters": [
          {
            "in": "path",
            "name": "webhook_endpoint",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webhook_endpoint"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amzn-RequestId": {
                "schema": {
                  "type": "string"
                }
              },
              "xflow-request-id": {
                "schema": {
                  "type": "string"
                }
              },
              "x-amz-apigw-id": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Amzn-Trace-Id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_object"
                }
              }
            },
            "description": "Error response."
          }
        },
        "tags": [
          "WebhookEndpoints"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "account": {
        "description": "Account objects are fundamental to XFlow and model entities like direct users, connected users, partners and platforms. Depending on whether you are setup as a direct user or platform, you can create new accounts, retrieve existing accounts to see it’s properties or take action on accounts to accept funds on their behalf.",
        "properties": {
          "address": {
            "description": "This parameter represents the state of the `xflow_receive` addresses associated with this account. The valid values include `deactivated`, `requested`, `processing` and `activated`.",
            "enum": [
              "deactivated",
              "requested",
              "processing",
              "activated"
            ],
            "type": "string"
          },
          "business_details": {
            "description": "Details about the business and activities that the account engages in.",
            "properties": {
              "dba": {
                "description": "Doing Business As, this is a 16 character customer-facing business name. Special characters like <, >, ', or \" are not allowed.",
                "nullable": true,
                "type": "string"
              },
              "email": {
                "description": "Email address.",
                "format": "email",
                "type": "string"
              },
              "ids": {
                "description": "Details about identification documents.",
                "nullable": true,
                "properties": {
                  "business": {
                    "description": "Unique identification number.",
                    "nullable": true,
                    "type": "string"
                  },
                  "tax": {
                    "description": "Tax Identification Number (e.g. Business PAN for Indian merchants).",
                    "nullable": true,
                    "type": "string"
                  },
                  "tax_deduction": {
                    "description": "Tax deduction Account Number (e.g. TAN for Indian merchants).",
                    "nullable": true,
                    "type": "string"
                  },
                  "tax_gst": {
                    "description": "Goods & Services Tax (GST) ID.",
                    "nullable": true,
                    "type": "string"
                  },
                  "tax_trade": {
                    "description": "Trade Identification Number (e.g. IEC for Indian merchants).",
                    "nullable": true,
                    "type": "string"
                  }
                },
                "title": "AccountBusinessDetailsIds",
                "type": "object"
              },
              "legal_name": {
                "description": "Unique name as per official documents.",
                "type": "string"
              },
              "physical_address": {
                "description": "Details about the physical address.",
                "properties": {
                  "city": {
                    "description": "City details in the official address.",
                    "nullable": true,
                    "type": "string"
                  },
                  "country": {
                    "description": "Country details in the [ISO 3166-1 alpha 2 code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) in uppercase.",
                    "enum": [
                      "AD",
                      "AE",
                      "AF",
                      "AG",
                      "AI",
                      "AL",
                      "AM",
                      "AO",
                      "AR",
                      "AT",
                      "AU",
                      "AW",
                      "AZ",
                      "BA",
                      "BB",
                      "BE",
                      "BF",
                      "BG",
                      "BH",
                      "BI",
                      "BJ",
                      "BM",
                      "BN",
                      "BO",
                      "BR",
                      "BS",
                      "BW",
                      "BZ",
                      "CA",
                      "CG",
                      "CH",
                      "CI",
                      "CL",
                      "CM",
                      "CN",
                      "CO",
                      "CR",
                      "CV",
                      "CY",
                      "CZ",
                      "DE",
                      "DJ",
                      "DK",
                      "DM",
                      "DO",
                      "DZ",
                      "EC",
                      "EE",
                      "EG",
                      "ER",
                      "ES",
                      "FI",
                      "FJ",
                      "FK",
                      "FO",
                      "FR",
                      "GA",
                      "GB",
                      "GD",
                      "GE",
                      "GF",
                      "GH",
                      "GI",
                      "GL",
                      "GM",
                      "GP",
                      "GQ",
                      "GR",
                      "GT",
                      "GU",
                      "GW",
                      "HK",
                      "HN",
                      "HR",
                      "HT",
                      "HU",
                      "ID",
                      "IE",
                      "IN",
                      "IL",
                      "IS",
                      "IT",
                      "JO",
                      "JP",
                      "KE",
                      "KG",
                      "KH",
                      "KI",
                      "KR",
                      "KW",
                      "KY",
                      "KZ",
                      "LA",
                      "LI",
                      "LR",
                      "LS",
                      "LT",
                      "LU",
                      "LV",
                      "MA",
                      "MC",
                      "MD",
                      "ME",
                      "MG",
                      "ML",
                      "MN",
                      "MO",
                      "MR",
                      "MT",
                      "MU",
                      "MW",
                      "MX",
                      "MY",
                      "MZ",
                      "NA",
                      "NE",
                      "NG",
                      "NL",
                      "NO",
                      "NZ",
                      "OM",
                      "PA",
                      "PE",
                      "PF",
                      "PG",
                      "PH",
                      "PL",
                      "PR",
                      "PS",
                      "PT",
                      "PY",
                      "QA",
                      "RE",
                      "RO",
                      "RS",
                      "SA",
                      "SE",
                      "SG",
                      "SI",
                      "SK",
                      "SL",
                      "SM",
                      "SN",
                      "SO",
                      "SS",
                      "SZ",
                      "TD",
                      "TG",
                      "TH",
                      "TJ",
                      "TL",
                      "TM",
                      "TN",
                      "TR",
                      "TT",
                      "TW",
                      "TZ",
                      "UA",
                      "UG",
                      "US",
                      "UY",
                      "VN",
                      "VU",
                      "ZA"
                    ],
                    "type": "string"
                  },
                  "line1": {
                    "description": "Line 1 in the official address.",
                    "nullable": true,
                    "type": "string"
                  },
                  "line2": {
                    "description": "Line 2 in the official address.",
                    "nullable": true,
                    "type": "string"
                  },
                  "postal_code": {
                    "description": "Postal code in the official address.",
                    "nullable": true,
                    "type": "string"
                  },
                  "state": {
                    "description": "State details in the official address.",
                    "nullable": true,
                    "type": "string"
                  }
                },
                "title": "AccountBusinessDetailsPhysicalAddress",
                "type": "object"
              },
              "product_description": {
                "description": "Description of the account’s business activities.",
                "nullable": true,
                "type": "string"
              },
              "type": {
                "description": "Valid values include `company`, `limited_liability_partnership`, `partnership`, `sole_proprietor`, `individual`, `business` and `other`.",
                "enum": [
                  "company",
                  "limited_liability_partnership",
                  "partnership",
                  "sole_proprietor",
                  "individual",
                  "business",
                  "other"
                ],
                "type": "string"
              },
              "website": {
                "description": "The website for the business. Set to `website_not_available` if unavailable.",
                "nullable": true,
                "type": "string"
              }
            },
            "title": "AccountBusinessDetails",
            "type": "object"
          },
          "created": {
            "description": "The seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time) at which the account was created.",
            "format": "unix-time",
            "type": "integer"
          },
          "fees": {
            "description": "XFlow fees which are set by XFlow for a platform. These fees indicate what XFlow will charge the account for money movement.",
            "properties": {
              "fx_markup": {
                "description": "FX markup is the XFlow markup over the mid-market FX rate.",
                "nullable": true,
                "type": "string"
              },
              "payout": {
                "description": "Payout fee is the XFlow fee per payout.",
                "nullable": true,
                "properties": {
                  "fixed": {
                    "description": "Fixed payout fee details.",
                    "items": {
                      "properties": {
                        "amount": {
                          "description": "Amount value that was charged by XFlow per payout.",
                          "nullable": true,
                          "type": "string"
                        },
                        "currency": {
                          "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the amount currency.",
                          "enum": [
                            "USD"
                          ],
                          "nullable": true,
                          "type": "string"
                        }
                      },
                      "title": "AccountFeesPayoutFixed",
                      "type": "object"
                    },
                    "nullable": true,
                    "type": "array"
                  },
                  "minimum": {
                    "description": "Minimum payout fee details.",
                    "items": {
                      "properties": {
                        "amount": {
                          "description": "Amount value that was charged by XFlow per payout.",
                          "nullable": true,
                          "type": "string"
                        },
                        "currency": {
                          "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the amount currency.",
                          "enum": [
                            "USD"
                          ],
                          "nullable": true,
                          "type": "string"
                        }
                      },
                      "title": "AccountFeesPayoutMinimum",
                      "type": "object"
                    },
                    "nullable": true,
                    "type": "array"
                  },
                  "variable": {
                    "description": "This is the percentage value that is used to calculate the XFlow fee per payout.",
                    "nullable": true,
                    "type": "string"
                  }
                },
                "title": "AccountFeesPayout",
                "type": "object"
              }
            },
            "title": "AccountFees",
            "nullable": true,
            "type": "object"
          },
          "fees_passthrough": {
            "description": "XFlow fees which are set on account of `type=platform` and passed onto the connected user by default (the platform has the option to mark up these fees for their connected users) during connected user creation.",
            "properties": {
              "fx_markup": {
                "description": "FX markup is the XFlow markup over the mid-market FX rate.",
                "nullable": true,
                "type": "string"
              },
              "payout": {
                "description": "Payout fee is the XFlow fee per payout.",
                "nullable": true,
                "properties": {
                  "fixed": {
                    "description": "Fixed payout fee details.",
                    "items": {
                      "properties": {
                        "amount": {
                          "description": "Amount value that was charged by XFlow per payout.",
                          "nullable": true,
                          "type": "string"
                        },
                        "currency": {
                          "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the amount currency.",
                          "enum": [
                            "USD"
                          ],
                          "nullable": true,
                          "type": "string"
                        }
                      },
                      "title": "AccountPassthroughFeesPayoutFixed",
                      "type": "object"
                    },
                    "nullable": true,
                    "type": "array"
                  },
                  "minimum": {
                    "description": "Minimum payout fee details.",
                    "items": {
                      "properties": {
                        "amount": {
                          "description": "Amount value that was charged by XFlow per payout.",
                          "nullable": true,
                          "type": "string"
                        },
                        "currency": {
                          "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the amount currency.",
                          "enum": [
                            "USD"
                          ],
                          "nullable": true,
                          "type": "string"
                        }
                      },
                      "title": "AccountPassthroughFeesPayoutMinimum",
                      "type": "object"
                    },
                    "nullable": true,
                    "type": "array"
                  },
                  "variable": {
                    "description": "This is the percentage value that is used to calculate the XFlow fee per payout.",
                    "nullable": true,
                    "type": "string"
                  }
                },
                "title": "AccountFeesPassthroughPayout",
                "type": "object"
              }
            },
            "title": "AccountFeesPassthrough",
            "nullable": true,
            "type": "object"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "link": {
            "description": "Not applicable",
            "nullable": true,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in livemode, the value `false` if the object exists in testmode or `null` in the case of a direct user or a platform (a direct user is an XFlow account of `type=user` which is not connected to an account of `type=platform`).",
            "nullable": true,
            "type": "boolean"
          },
          "logo_id": {
            "description": "A [file object identifier](https://docs.xflowpay.com/2023-04-12/api#file_object_id) which contains a logo for the user to customize communications with their customers.",
            "nullable": true,
            "type": "string"
          },
          "metadata": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://docs.xflowpay.com/2023-04-12/api#metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "title": "AccountMetadata",
            "nullable": true,
            "type": "object"
          },
          "nickname": {
            "description": "Name for the account.",
            "nullable": true,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "account"
            ],
            "type": "string"
          },
          "parent_account_id": {
            "description": "Unique identifier for the parent account object which created this particular account.",
            "nullable": true,
            "type": "string"
          },
          "payouts": {
            "description": "Payouts details.",
            "properties": {
              "enabled": {
                "description": "Whether XFlow can send payouts to this account. This parameter can be set by XFlow for a direct user or by the platform on behalf of a connected user. The former is an XFlow account of `type=user` which is not connected to an account of `type=platform`.",
                "type": "boolean"
              },
              "interval": {
                "description": "How frequently funds will be paid out. One of `daily`, `weekly`, or `monthly`.",
                "enum": [
                  "daily",
                  "weekly",
                  "monthly"
                ],
                "type": "string"
              },
              "monthly_anchor": {
                "description": "The day of the month funds will be paid out. Only applies if interval is monthly. Payouts scheduled between the 29th and 31st of the month are sent on the last day of shorter months.",
                "format": "int64",
                "maximum": 31,
                "minimum": 1,
                "nullable": true,
                "type": "integer"
              },
              "reason_code_not_enabled": {
                "description": "The reason code if payouts are not enabled. Valid values include `account_not_activated`, `platform_hold` and `xflow_hold`.",
                "nullable": true,
                "type": "string"
              },
              "weekly_anchor": {
                "description": "The day of the week funds will be paid out, of the style ‘monday’, ‘tuesday’, etc. Only applies if interval is `weekly`.",
                "enum": [
                  "monday",
                  "tuesday",
                  "wednesday",
                  "thursday",
                  "friday",
                  "saturday",
                  "sunday"
                ],
                "nullable": true,
                "type": "string"
              }
            },
            "title": "AccountPayouts",
            "nullable": true,
            "type": "object"
          },
          "processing_fee_indicator": {
            "description": "This is an account level setting which defines how fees associated with specific payment methods are split between the partner and the XFlow user. Valid values include `partner`, `shared` and `user`.",
            "properties": {
              "affirm": {
                "enum": [
                  "partner",
                  "shared",
                  "user"
                ],
                "type": "string"
              },
              "afterpay": {
                "enum": [
                  "partner",
                  "shared",
                  "user"
                ],
                "type": "string"
              },
              "check": {
                "enum": [
                  "partner",
                  "shared",
                  "user"
                ],
                "type": "string"
              },
              "domestic_debit": {
                "enum": [
                  "partner",
                  "shared",
                  "user"
                ],
                "type": "string"
              },
              "klarna": {
                "enum": [
                  "partner",
                  "shared",
                  "user"
                ],
                "type": "string"
              }
            },
            "title": "AccountProcessingFeeIndicator",
            "nullable": true,
            "type": "object"
          },
          "supporting_documentation": {
            "description": "Details of the supporting documentation for the account.",
            "properties": {
              "id_document": {
                "description": "A [file object identifier](https://docs.xflowpay.com/2023-04-12/api#file_object_id) which references a document that proves the authenticity of the account.",
                "type": "string"
              }
            },
            "title": "AccountSupportingDocumentation",
            "nullable": true,
            "type": "object"
          },
          "status": {
            "description": "Valid status types associated with an XFlow account.",
            "enum": [
              "draft",
              "verifying",
              "activated",
              "deactivated",
              "hold"
            ],
            "type": "string"
          },
          "tos_acceptance": {
            "description": "Details of account accepting terms of service (tos).",
            "properties": {
              "ip": {
                "description": "IP address of the account from which the terms of service were accepted.",
                "nullable": true,
                "type": "string"
              },
              "time": {
                "description": "The seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time) at which the terms of service was accepted.",
                "format": "unix-time",
                "nullable": true,
                "type": "integer"
              },
              "user_agent": {
                "description": "The user agent of the browser from which the account representative accepted their service agreement",
                "nullable": true,
                "type": "string"
              }
            },
            "title": "AccountTosAcceptance",
            "nullable": true,
            "type": "object"
          },
          "type": {
            "description": "Account types. These can be `partner`, `platform` or `user`.",
            "enum": [
              "partner",
              "platform",
              "user"
            ],
            "type": "string"
          }
        },
        "title": "Account",
        "type": "object"
      },
      "address": {
        "description": "Address objects represent a destination (for a store of value), which is usually an XFlow account.",
        "properties": {
          "account_id": {
            "description": "Unique identifier of an account object associated with this address.",
            "type": "string"
          },
          "bank_account": {
            "description": "Bank account details.",
            "properties": {
              "domestic_credit": {
                "description": "Represents the prefix associated with the bank account for a local ACH credit.",
                "nullable": true,
                "type": "string"
              },
              "domestic_debit": {
                "description": "Represents the prefix associated with the bank account for a local ACH debit.",
                "nullable": true,
                "type": "string"
              },
              "domestic_fast_credit": {
                "description": "Represents the prefix associated with the bank account for fast local ACH credit.",
                "nullable": true,
                "type": "string"
              },
              "domestic_wire": {
                "description": "Represents the prefix (if any) associated with the bank account for a domestic wire.",
                "nullable": true,
                "type": "string"
              },
              "global_wire": {
                "description": "Represents the Business Identifier Code (BIC) associated with the bank account.",
                "nullable": true,
                "type": "string"
              },
              "iban": {
                "description": "Represents the International Bank Account Number (IBAN) associated with the bank account.",
                "nullable": true,
                "type": "string"
              },
              "last4": {
                "description": "Last 4 digits of the bank account number.",
                "type": "string"
              },
              "number": {
                "description": "Unique bank account number.",
                "type": "string"
              }
            },
            "title": "AddressBankAccount",
            "nullable": true,
            "type": "object"
          },
          "billing_details": {
            "description": "Billing address.",
            "properties": {
              "city": {
                "description": "City details in the official address.",
                "nullable": true,
                "type": "string"
              },
              "country": {
                "description": "Country details in the [ISO 3166-1 alpha 2 code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) in uppercase.",
                "enum": [
                  "IN"
                ],
                "type": "string"
              },
              "line1": {
                "description": "Line 1 in the official address.",
                "nullable": true,
                "type": "string"
              },
              "line2": {
                "description": "Line 2 in the official address.",
                "nullable": true,
                "type": "string"
              },
              "postal_code": {
                "description": "Postal code in the official address.",
                "nullable": true,
                "type": "string"
              },
              "state": {
                "description": "State details in the official address.",
                "nullable": true,
                "type": "string"
              }
            },
            "title": "AddressBillingDetails",
            "nullable": true,
            "type": "object"
          },
          "category": {
            "description": "XFlow categorization of destination (for a store of value).",
            "enum": [
              "partner_payment",
              "user_payout",
              "xflow_checkout",
              "xflow_fee_advance",
              "xflow_receive"
            ],
            "type": "string"
          },
          "created": {
            "description": "The seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time) at which the address object was created.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the amount currency.",
            "enum": [
              "INR",
              "USD"
            ],
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "is_reusable": {
            "description": "Indicates whether the address is reusable for ACH debit.",
            "type": "boolean"
          },
          "livemode": {
            "description": "Has the value true if the object exists in `livemode` or the value false if the object exists in `testmode`.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://docs.xflowpay.com/2023-04-12/api#metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "title": "AddressMetadata",
            "nullable": true,
            "type": "object"
          },
          "name": {
            "description": "Name on the destination (for a store of value).",
            "nullable": true,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "address"
            ],
            "type": "string"
          },
          "status": {
            "description": "Valid status types associated with an address.",
            "enum": [
              "activated",
              "deactivated",
              "expired",
              "pending_deactivation"
            ],
            "type": "string"
          },
          "supporting_documentation": {
            "description": "Documents required to prove the authenticity of this destination (for a store of value).",
            "properties": {
              "id_document": {
                "description": "A [file object identifier](https://docs.xflowpay.com/2023-04-12/api#file_object_id) which references a document that identifies this destination (for a store of value).",
                "type": "string"
              }
            },
            "title": "AddressSupportingDocumentation",
            "nullable": true,
            "type": "object"
          },
          "type": {
            "description": "Type of destination (for a store of value). This can be `bank_account` or `wallet`.",
            "enum": [
              "bank_account",
              "wallet"
            ],
            "type": "string"
          },
          "wallet": {
            "description": "Wallet details.",
            "properties": {
              "email": {
                "description": "Email registered with the wallet provider.",
                "nullable": true,
                "type": "string"
              },
              "provider": {
                "description": "This can be `affirm`, `afterpay` or `klarna`.",
                "enum": [
                  "affirm",
                  "afterpay",
                  "klarna"
                ],
                "nullable": true,
                "type": "string"
              }
            },
            "title": "AddressWallet",
            "nullable": true,
            "type": "object"
          }
        },
        "title": "Address",
        "type": "object"
      },
      "balance": {
        "description": "The balance object represents a snapshot of the user's balance within XFlow.",
        "properties": {
          "account_id": {
            "description": "Unique identifier for the account object for which this balance is associated.",
            "type": "string"
          },
          "available": {
            "description": "Funds that are available to the user within XFlow. For example, this could be funds which have been reconciled, but have not yet been picked up for reconciliation.",
            "items": {
              "properties": {
                "amount": {
                  "description": "Balance amount.",
                  "type": "string"
                },
                "currency": {
                  "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the amount currency.",
                  "enum": [
                    "USD"
                  ],
                  "type": "string"
                }
              },
              "title": "BalanceAvailable",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "fee_advance": {
            "description": "Funds that have been transferred by the user to maintain balance within XFlow to enable connected users to have fees lower than the passthrough fees. This is `[]` for non-platform users.",
            "items": {
              "properties": {
                "amount": {
                  "description": "Balance amount.",
                  "type": "string"
                },
                "currency": {
                  "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the amount currency.",
                  "enum": [
                    "USD"
                  ],
                  "type": "string"
                }
              },
              "title": "BalanceFeeAdvance",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "livemode": {
            "description": "Has the value true if the object exists in `livemode` or the value false if the object exists in `testmode`.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "balance"
            ],
            "type": "string"
          },
          "payout_processing": {
            "description": "Funds that are being processed for payouts by XFlow.",
            "items": {
              "properties": {
                "amount": {
                  "description": "Balance amount.",
                  "type": "string"
                },
                "currency": {
                  "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the amount currency.",
                  "enum": [
                    "USD"
                  ],
                  "type": "string"
                }
              },
              "title": "BalancePayoutProcessing",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "pending": {
            "description": "Funds that are not yet available to the user within XFlow. For example, this could be funds which have been received against a particular account identifier but have not yet been reconciled.",
            "items": {
              "properties": {
                "amount": {
                  "description": "Balance amount.",
                  "type": "string"
                },
                "currency": {
                  "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the amount currency.",
                  "enum": [
                    "USD"
                  ],
                  "type": "string"
                }
              },
              "title": "BalancePending",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Balance",
        "type": "object"
      },
      "balance_transaction": {
        "description": "BalanceTransactions (BTs) are created by payments and represent funds being credited and debited in the Available and Pending compartments. Note that a single Payment can create multiple BTs.",
        "properties": {
          "amount": {
            "description": "Amount value associated with the BalanceTransaction.",
            "type": "string"
          },
          "category": {
            "description": "XFlow categorization of BalanceTransactions. This can be `available`, `fee_advance`, `payout_processing` and `pending`.",
            "enum": [
              "available",
              "fee_advance",
              "payout_processing",
              "pending"
            ],
            "type": "string"
          },
          "created": {
            "description": "The seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time) at which the BalanceTransaction object was created.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the amount currency.",
            "enum": [
              "USD"
            ],
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "livemode": {
            "description": "Has the value true if the object exists in `livemode` or the value false if the object exists in `testmode`.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "balance_transaction"
            ],
            "type": "string"
          },
          "payment_id": {
            "description": "Unique identifier for the Payment object associated with the BalanceTransaction.",
            "type": "string"
          }
        },
        "title": "BalanceTransaction",
        "type": "object"
      },
      "deposit": {
        "description": "Deposit objects are created by XFlow whenever funds are deposited into an XFlow account.",
        "properties": {
          "amount": {
            "description": "Amount value that was deposited in XFlow. This value is negative in case of a dispute.",
            "type": "string"
          },
          "created": {
            "description": "The seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time) at which the deposit was created.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the amount currency.",
            "enum": [
              "USD"
            ],
            "type": "string"
          },
          "from": {
            "description": "Details of the account and address from which the funds are being deposited.",
            "properties": {
              "account_id": {
                "description": "Account identifier for the account from which funds are being deposited. Refer [account object](https://docs.xflowpay.com/2023-04-12/api#accounts) for more details.",
                "type": "string"
              },
              "address_id": {
                "description": "Address identifier of the account from which funds are being deposited. Refer [address object](https://docs.xflowpay.com/2023-04-12/api#addresses) for more details.",
                "nullable": true,
                "type": "string"
              }
            },
            "title": "DepositFrom",
            "type": "object"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "livemode": {
            "description": "Has the value true if the object exists in `livemode` or the value false if the object exists in `testmode`.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://docs.xflowpay.com/2023-04-12/api#metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "title": "DepositMetadata",
            "nullable": true,
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "deposit"
            ],
            "type": "string"
          },
          "payment_method": {
            "description": "Payment method via which funds were deposited.",
            "enum": [
              "affirm",
              "afterpay",
              "check",
              "domestic_credit",
              "domestic_debit",
              "domestic_fast_credit",
              "domestic_wire",
              "global_wire",
              "klarna"
            ],
            "type": "string"
          },
          "payment_method_details": {
            "description": "Unique identifier for the object.",
            "properties": {
              "reference_number": {
                "description": "This is a reference number associated with the payment method. For example, in the case of a check this parameter will contain the check reference number.",
                "type": "string"
              }
            },
            "title": "DepositPaymentMethodDetails",
            "nullable": true,
            "type": "object"
          },
          "reason_code": {
            "description": "Reason why the deposit was declined or disputed.",
            "enum": [
              "cancelled",
              "duplicate",
              "general",
              "high_risk",
              "incorrect_amount",
              "poor_image_quality",
              "unmatched_details"
            ],
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor": {
            "description": "Narration available on the incoming deposit.",
            "nullable": true,
            "type": "string"
          },
          "status": {
            "description": "Valid status types associated with deposit.",
            "enum": [
              "initialized",
              "processing",
              "completed",
              "cancelled",
              "failed"
            ],
            "type": "string"
          },
          "to": {
            "description": "Details of the account and address to which the deposit is being made.",
            "properties": {
              "account_id": {
                "description": "Account identifier for the account to which funds are being deposited. Refer [account object](https://docs.xflowpay.com/2023-04-12/api#accounts) for more details.",
                "type": "string"
              },
              "address_id": {
                "description": "Address identifier of the account to which funds are being deposited. Refer [address object](https://docs.xflowpay.com/2023-04-12/api#addresses) for more details.",
                "type": "string"
              }
            },
            "title": "DepositTo",
            "type": "object"
          }
        },
        "title": "Deposit",
        "type": "object"
      },
      "error_object": {
        "description": "XFlow uses conventional HTTP response codes to indicate the success or failure of an API request. In general: Codes in the `2xx` range indicate success. Codes in the `4xx` range indicate an error that failed given the information provided (e.g., a required parameter was omitted, a payment failed, etc.). Codes in the `5xx` range indicate an error with XFlow’s servers (these are rare).",
        "properties": {
          "errors": {
            "description": "An array of errors. Each element is a specific error.",
            "maxItems": 1,
            "minItems": 1,
            "items": {
              "properties": {
                "code": {
                  "description": "Enum value specific to the error. All XFlow error codes are defined [here](https://docs.xflowpay.com/latest/errors).",
                  "enum": [
                    "account_activation_failed_missing_payout_address",
                    "account_activation_failed_missing_person",
                    "account_activation_failed_incorrect_number_of_persons",
                    "account_activation_failed_incorrect_relationship_for_person",
                    "account_email_invalid",
                    "account_id_invalid",
                    "account_not_unique_nickname",
                    "account_parameter_not_editable",
                    "account_partner_activate_disallowed",
                    "account_partner_deactivate_disallowed",
                    "account_platform_activate_disallowed",
                    "account_platform_create_disallowed",
                    "account_status_invalid",
                    "account_type_invalid",
                    "account_update_access_unauthorized",
                    "account_user_activate_disallowed",
                    "account_user_create_disallowed",
                    "action_invalid",
                    "action_not_enabled",
                    "action_unauthorized",
                    "address_category_mismatch",
                    "address_category_not_allowed",
                    "address_domestic_credit_invalid",
                    "address_global_wire_invalid",
                    "address_global_wire_not_supported",
                    "address_parameter_not_editable",
                    "address_type_not_allowed",
                    "balance_insufficient",
                    "cancelled_request",
                    "country_code_invalid",
                    "country_code_not_supported",
                    "currency_amount_mismatch",
                    "currency_not_supported",
                    "date_invalid_format",
                    "deposit_account_address_mismatch",
                    "deposit_account_id_mismatch",
                    "deposit_parameter_not_editable",
                    "duplicate_currencies_not_supported",
                    "event_type_invalid",
                    "file_name_invalid",
                    "file_name_length_invalid",
                    "file_parameter_not_editable",
                    "file_purpose_mismatch",
                    "file_request_body_invalid",
                    "file_type_unsupported",
                    "header_parameter_invalid",
                    "header_parameter_missing",
                    "http_parameter_invalid",
                    "invalid_amount",
                    "invoice_date_invalid",
                    "invoice_due_date_invalid",
                    "metadata_count_exceeded",
                    "metadata_key_max_length_invalid",
                    "metadata_key_min_length_invalid",
                    "metadata_value_max_length_invalid",
                    "metadata_value_min_length_invalid",
                    "object_not_found",
                    "parameter_address_invalid",
                    "parameter_character_invalid",
                    "parameter_empty",
                    "parameter_format_invalid",
                    "parameter_file_invalid",
                    "parameter_max_length_invalid",
                    "parameter_min_length_invalid",
                    "parameter_range_invalid",
                    "parameter_receivable_invalid",
                    "parameter_unexpected",
                    "parameter_value_invalid",
                    "payment_link_account_receivable_mismatch",
                    "payment_link_activate_disallowed",
                    "payment_link_deactivate_invalid",
                    "payment_link_expire_invalid",
                    "payment_link_extend_disallowed",
                    "payment_link_extend_invalid",
                    "payment_link_non_us_account_non_usd_currency",
                    "payment_link_parameter_not_editable",
                    "payment_link_receivable_count_exceed",
                    "payout_parameter_not_editable",
                    "person_delete_not_allowed",
                    "person_parameter_not_editable",
                    "person_relationship_not_set",
                    "person_update_not_allowed",
                    "purpose_code_not_supported",
                    "receivable_additional_info_required",
                    "receivable_amount_invoice_amount_mismatch",
                    "receivable_amount_maximum_reconcilable_incorrect",
                    "receivable_cancel_disallowed",
                    "receivable_confirm_action_disallowed",
                    "receivable_creation_date_invoice_creation_date_mismatch",
                    "receivable_currency_invoice_currency_mismatch",
                    "receivable_due_date_invoice_due_date_mismatch",
                    "receivable_hold",
                    "receivable_invoice_document_incorrect",
                    "receivable_invoice_reference_number_exists",
                    "receivable_invoice_transaction_type_incorrect",
                    "receivable_parameter_not_editable",
                    "receivable_partner_country_invoice_partner_country_mismatch",
                    "receivable_partner_deactivated",
                    "receivable_partner_invoice_partner_mismatch",
                    "receivable_partner_not_active",
                    "receivable_reconcile_action_disallowed",
                    "receivable_reconcile_amount_exceed",
                    "receivable_reference_number_invoice_reference_number_mismatch",
                    "receivable_unable_to_process",
                    "receivable_update_access_unauthorized",
                    "request_body_invalid",
                    "request_query_parameter_invalid",
                    "secret_key_invalid",
                    "secret_key_missing",
                    "testmode_action_only",
                    "timestamp_invalid",
                    "transfer_parameter_not_editable",
                    "transfer_type_invalid",
                    "url_invalid",
                    "webhook_endpoint_limit_exceeded",
                    "webhook_endpoint_parameter_not_editable",
                    "website_invalid"
                  ],
                  "type": "string"
                },
                "message": {
                  "description": "Description of the error with guidance on how to recover.",
                  "type": "string"
                },
                "metadata": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Additional information associated with the error in the form of key-value pairs.",
                  "nullable": true,
                  "title": "ErrorMetadata",
                  "type": "object"
                }
              },
              "title": "ErrorObjectSingle",
              "type": "object"
            },
            "type": "array"
          },
          "http_status_code": {
            "description": "HTTP status code.",
            "type": "integer"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "error"
            ],
            "type": "string"
          }
        },
        "title": "ErrorObject",
        "type": "object"
      },
      "event": {
        "description": "Events are XFlow's way of letting you know when something interesting happens in your account. When an interesting event occurs, we create a new event object. For example, when a deposit is received, we create a `deposit.status.completed event`. Note that many API requests may cause multiple events to be created.",
        "properties": {
          "account_id": {
            "description": "The identifier for the account to which the associated object that generated this event belongs.",
            "nullable": true,
            "type": "string"
          },
          "created": {
            "description": "The seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time) at which the event object was created.",
            "format": "unix-time",
            "type": "integer"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "linked_id": {
            "description": "The identifier of the object that generated this event.",
            "type": "string"
          },
          "linked_object": {
            "description": "The type of the object that generated this event. This can be one of `account`, `address`, `deposit`, `receivable` or `payout`.",
            "enum": [
              "account",
              "address",
              "deposit",
              "receivable",
              "payout"
            ],
            "type": "string"
          },
          "livemode": {
            "description": "Has the value true if the object exists in `livemode` or the value false if the object exists in `testmode`.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "event"
            ],
            "type": "string"
          },
          "type": {
            "description": "Description of the event (e.g., `deposit.status.completed`). You can find the full list of event types [here](https://docs.xflowpay.com/2023-04-12/api#types-of-events).",
            "enum": [
              "account.address.activated",
              "account.payouts_enabled.updated",
              "account.status.activated",
              "account.status.hold",
              "address.created",
              "address.status.activated",
              "address.status.deactivated",
              "deposit.status.completed",
              "payout.status.initialized",
              "payout.status.processing",
              "payout.status.settled",
              "payout.status.failed",
              "payout.payment_confirmation.updated",
              "receivable.amount_reconciled.updated",
              "receivable.amount_settled_payouts.updated",
              "receivable.status.activated",
              "receivable.status.cancelled",
              "receivable.status.completed",
              "receivable.status.hold",
              "receivable.status.input_required",
              "receivable.status.verifying"
            ],
            "type": "string"
          }
        },
        "title": "Event",
        "type": "object"
      },
      "exchange_rate": {
        "description": "The ExchangeRate object models the details behind currency conversion. It transparently offers details like the buy and sell amounts, what the mid-market and the user-facing rates are and (if applicable) how long the rates are valid. The ExchangeRate object is always created by a payment object.",
        "properties": {
          "buy": {
            "description": "Details of the buy amount and currency.",
            "properties": {
              "amount": {
                "description": "Buy amount value.",
                "type": "string"
              },
              "currency": {
                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the amount currency.",
                "enum": [
                  "INR"
                ],
                "type": "string"
              }
            },
            "title": "ExchangeRateBuy",
            "type": "object"
          },
          "created": {
            "description": "The seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time) at which the ExchangeRate object was created.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency_pair": {
            "description": "The currency pair associated with buy and sell currencies.",
            "type": "string"
          },
          "dealt_currency": {
            "description": "Dealt currency denotes the fixed side of the conversion request. If `buy.amount` was specified, then `buy.currency`; else, `sell.currency` (in 3-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format).",
            "enum": [
              "USD"
            ],
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "livemode": {
            "description": "Has the value true if the object exists in `livemode` or the value false if the object exists in `testmode`.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "exchange_rate"
            ],
            "type": "string"
          },
          "payment_id": {
            "description": "Unique identifier for the payment object associated with this ExchangeRate object.",
            "type": "string"
          },
          "rate": {
            "description": "Details of the sell amount and currency.",
            "properties": {
              "mid_market": {
                "description": "For reference purposes only. This rate represents the midpoint of the current bid and ask price.",
                "type": "string"
              },
              "user": {
                "description": "The returned FX quote.",
                "type": "string"
              },
              "valid_from": {
                "description": "The seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time) from which the rates in this ExchangeRate object are valid.",
                "format": "unix-time",
                "type": "integer"
              },
              "valid_to": {
                "description": "The seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time) till which the rates in this ExchangeRate object are valid.",
                "format": "unix-time",
                "type": "integer"
              }
            },
            "title": "ExchangeRateRate",
            "type": "object"
          },
          "sell": {
            "description": "Details of the sell amount and currency.",
            "properties": {
              "amount": {
                "description": "Sell amount value.",
                "type": "string"
              },
              "currency": {
                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the amount currency.",
                "enum": [
                  "USD"
                ],
                "type": "string"
              }
            },
            "title": "ExchangeRateSell",
            "type": "object"
          },
          "type": {
            "description": "Types of ExchangeRate objects. For now, this only accepts type `lock`.",
            "enum": [
              "lock"
            ],
            "type": "string"
          }
        },
        "title": "ExchangeRate",
        "type": "object"
      },
      "file_object": {
        "description": "Files are documents provided by an account for a specific purpose. You can create new files accounts and retrieve existing files.",
        "properties": {
          "created": {
            "description": "The seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time) at which the file object was created.",
            "format": "unix-time",
            "type": "integer"
          },
          "file_name": {
            "description": "A filename for the file, suitable for saving to a filesystem.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "livemode": {
            "description": "Has the value true if the object exists in `livemode` or the value false if the object exists in `testmode`.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional information associated with the error in the form of key-value pairs.",
            "title": "FileMetadata",
            "nullable": true,
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "file"
            ],
            "type": "string"
          },
          "purpose": {
            "description": "Purpose for uploading the file. The formats supported for all documents are of type `jpeg`, `pdf` and `png`. The maximum size allowed is 10MB. All documents are downloadable and never expire.",
            "enum": [
              "additional_verification",
              "finance_document",
              "identity_document",
              "logo",
              "payout_confirmation",
              "tax_document"
            ],
            "type": "string"
          },
          "size": {
            "description": "The size in bytes of the uploaded file.",
            "type": "integer"
          },
          "type": {
            "description": "The type of the file returned: `jpeg`, `pdf` or `png`.",
            "enum": [
              "jpeg",
              "pdf",
              "png"
            ],
            "type": "string"
          },
          "url": {
            "description": "The URL from which the file can be downloaded using your API key.",
            "type": "string"
          }
        },
        "title": "FileObject",
        "type": "object"
      },
      "payment_link": {
        "description": "A PaymentLink object enables a XFlow user to send a payment link to a partner to collect money.",
        "properties": {
          "account_id": {
            "description": "Unique identifier for the account object associated with the PaymentLink.",
            "type": "string"
          },
          "created": {
            "description": "The seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time) at which the PaymentLink object was created.",
            "format": "unix-time",
            "type": "integer"
          },
          "expires_at": {
            "description": "The seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time) at which the PaymentLink object will expire.",
            "format": "unix-time",
            "type": "integer"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "link": {
            "description": "PaymentLink object URL.",
            "type": "string"
          },
          "livemode": {
            "description": "Has the value true if the object exists in `livemode` or the value false if the object exists in `testmode`.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://docs.xflowpay.com/2023-04-12/api#metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "title": "PaymentLinkMetadata",
            "nullable": true,
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "payment_link"
            ],
            "type": "string"
          },
          "receivable_ids": {
            "description": "Array of unique identifiers of the receivable objects associated with the PaymentLink. Currently you can have only one receivable associated with a PaymentLink object.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "status": {
            "description": "Valid status associated with PaymentLinks.",
            "enum": [
              "activated",
              "deactivated",
              "expired"
            ],
            "type": "string"
          },
          "type": {
            "description": "The type of PaymentLink object used for accepting payments against a receivable object.",
            "enum": [
              "receivable"
            ],
            "type": "string"
          }
        },
        "title": "PaymentLink",
        "type": "object"
      },
      "payment": {
        "description": "The Payment object models real-world money movement into, within and out of XFlow. Payments lead to movement of money from source to destination and result in the creation of BalanceTransactions. Payments between different types of currencies will result in the creation of an ExchangeRate object. XFlow models fees as distinct payments as well.",
        "properties": {
          "created": {
            "description": "The seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time) at which the payment object was created.",
            "format": "unix-time",
            "type": "integer"
          },
          "from": {
            "description": "Details of the account & currency from which the funds are being transferred.",
            "properties": {
              "amount": {
                "description": "Amount value.",
                "type": "string"
              },
              "currency": {
                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the currency.",
                "enum": [
                  "USD"
                ],
                "type": "string"
              }
            },
            "title": "PaymentFrom",
            "type": "object"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "is_exchange_rate_applicable": {
            "description": "Has the value `true` if an ExchangeRate object is associated with this payment, otherwise the value is `false`.",
            "type": "boolean"
          },
          "linked_id": {
            "description": "Unique identifier for the object that created this underlying payment object.",
            "type": "string"
          },
          "linked_object": {
            "description": "String representing the linked object’s type. Objects of the same type share the same value.",
            "enum": [
              "deposit",
              "receivable",
              "payout",
              "transfer"
            ],
            "type": "string"
          },
          "linked_payments": {
            "description": "This array of hashes contains details of the linked payment IDs",
            "minItems": 1,
            "items": {
              "properties": {
                "account_id": {
                  "description": "This is the identifier of the account that the linked payment belongs to.",
                  "type": "string"
                },
                "payment_id": {
                  "description": "This is the identifier of the linked payment.",
                  "type": "string"
                },
                "payment_type": {
                  "description": "This is the [type](https://docs.xflowpay.com/2023-04-12/api#payment_object_type) of the linked payment.",
                  "enum": [
                    "adjustment_negative",
                    "adjustment_positive",
                    "fee_advance_debit",
                    "funds_credit",
                    "funds_debit",
                    "fx_fee",
                    "payout",
                    "payout_failure",
                    "payout_fee",
                    "platform_partner_debit",
                    "processing_fee",
                    "reconcile",
                    "transfer"
                  ],
                  "type": "string"
                }
              },
              "title": "PaymentLinkedPayments",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "livemode": {
            "description": "Has the value true if the object exists in `livemode` or the value false if the object exists in `testmode`.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "payment"
            ],
            "type": "string"
          },
          "payout_eligible_at": {
            "description": "The seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time) at which the payment becomes eligible for payout. This is applicable only for Payment type `reconcile`.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "to": {
            "description": "Details of the account & currency to which the funds are being transferred.",
            "properties": {
              "amount": {
                "description": "Amount value.",
                "type": "string"
              },
              "currency": {
                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the currency.",
                "enum": [
                  "INR",
                  "USD"
                ],
                "type": "string"
              }
            },
            "title": "PaymentTo",
            "type": "object"
          },
          "type": {
            "description": "Payment type.",
            "enum": [
              "adjustment_negative",
              "adjustment_positive",
              "fee_advance_debit",
              "funds_credit",
              "funds_debit",
              "fx_fee",
              "payout",
              "payout_failure",
              "payout_fee",
              "platform_partner_debit",
              "processing_fee",
              "reconcile",
              "transfer"
            ],
            "type": "string"
          }
        },
        "title": "Payment",
        "type": "object"
      },
      "payout": {
        "description": "Payout objects are created by XFlow whenever funds are moved out of an XFlow account into a real-world destination (for a store of value).",
        "properties": {
          "amount": {
            "description": "Amount value associated with the payout.",
            "type": "string"
          },
          "arrival_time": {
            "description": "The seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time) at which the funds are expected to be credited at the specified address. Put another way, this is the date the the payout is expected to arrive in the bank. This factors in delays like weekends or bank holidays.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "automatic": {
            "description": "Has the value `true` if automatic payouts are enabled and has the value `false` if manual payouts are enabled. Currently, XFlow supports automatic payouts only.",
            "type": "boolean"
          },
          "created": {
            "description": "The seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time) at which the payout object was created.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the amount currency.",
            "enum": [
              "INR",
              "USD"
            ],
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "livemode": {
            "description": "Has the value true if the object exists in `livemode` or the value false if the object exists in `testmode`.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://docs.xflowpay.com/2023-04-12/api#metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "title": "PayoutsMetadata",
            "nullable": true,
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "payout"
            ],
            "type": "string"
          },
          "payment_method": {
            "description": "This is set to `domestic_credit` which specifies that funds are transferred using local ACH credit.",
            "enum": [
              "domestic_credit"
            ],
            "type": "string"
          },
          "payment_method_details": {
            "description": "Details of the account & currency to which the funds are being transferred.",
            "properties": {
              "reference_number": {
                "description": "This is a reference number associated with the payment method.",
                "type": "string"
              }
            },
            "title": "PayoutPaymentMethodDetails",
            "nullable": true,
            "type": "object"
          },
          "payout_confirmation": {
            "description": "File object providing details of the payout amount. E.g. - MT 103, Payment Advice.",
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor": {
            "description": "Text which appears on the bank account statement.",
            "type": "string"
          },
          "status": {
            "description": "Valid status for payouts.",
            "enum": [
              "initialized",
              "processing",
              "settled",
              "failed",
              "hold"
            ],
            "type": "string"
          },
          "to": {
            "description": "Details of the account & currency to which the funds are being transferred.",
            "properties": {
              "account_id": {
                "description": "Account identifier for the account to which funds are being paid out. Refer [account object](https://docs.xflowpay.com/2023-04-12/api#accounts) for more details.",
                "type": "string"
              },
              "address_id": {
                "description": "Address identifier of the account to which funds are being paid out. Refer [address object](https://docs.xflowpay.com/2023-04-12/api#addresses) for more details.",
                "type": "string"
              }
            },
            "title": "PayoutTo",
            "type": "object"
          }
        },
        "title": "Payout",
        "type": "object"
      },
      "person": {
        "description": "A person object represents an individual associated with an XFlow account.",
        "properties": {
          "created": {
            "description": "The seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time) at which the person object was created.",
            "format": "unix-time",
            "type": "integer"
          },
          "full_name": {
            "description": "Full name (i.e first name followed by the last name) of the person.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "livemode": {
            "description": "Has the value true if the object exists in `livemode` or the value false if the object exists in `testmode`.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "person"
            ],
            "type": "string"
          },
          "relationship": {
            "description": "Relationship of the person with the account.",
            "properties": {
              "director": {
                "description": "`true` if the person is the director of the account entity, `false` otherwise.",
                "type": "boolean"
              },
              "owner": {
                "description": "`true` if the person is the owner of the account entity, `false` otherwise.",
                "type": "boolean"
              },
              "representative": {
                "description": "`true` if the person is the representative of the account entity, `false` otherwise.",
                "type": "boolean"
              }
            },
            "title": "PersonRelationship",
            "type": "object"
          },
          "status": {
            "description": "Valid status for persons.",
            "enum": [
              "pending",
              "unverified",
              "verified"
            ],
            "type": "string"
          },
          "supporting_documentation": {
            "description": "Documents required to prove relationship of the person with the account.",
            "properties": {
              "id_document": {
                "description": "File identifier of the document that identifies this person. This can be a tax document like a PAN card (set `file.purpose` to `identity_document` during file creation) or an alternate document like a passport (set `file.purpose` to `additional_verification`).",
                "type": "string"
              }
            },
            "title": "PersonSupportingDocumentation",
            "nullable": true,
            "type": "object"
          },
          "supporting_ids": {
            "description": "Details about identification documents.",
            "properties": {
              "tax": {
                "description": "Tax Identification Number (e.g. PAN for Indian individuals).",
                "type": "string"
              }
            },
            "title": "PersonSupportingIds",
            "nullable": true,
            "type": "object"
          }
        },
        "title": "Person",
        "type": "object"
      },
      "quote": {
        "description": "The quotes object returns indicative FX rates for the buy/sell currency and amount.",
        "properties": {
          "buy": {
            "description": "Details of the buy amount and currency.",
            "properties": {
              "amount": {
                "description": "Buy amount value.",
                "type": "string"
              },
              "currency": {
                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the amount currency.",
                "enum": [
                  "INR"
                ],
                "type": "string"
              }
            },
            "title": "QuoteBuy",
            "type": "object"
          },
          "currency_pair": {
            "description": "The currency pair associated with buy and sell currencies.",
            "type": "string"
          },
          "dealt_currency": {
            "description": "Dealt currency denotes the fixed side of the conversion request. If `buy.amount` was specified, then `buy.currency`; else, `sell.currency` (in 3-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format).",
            "enum": [
              "USD"
            ],
            "type": "string"
          },
          "livemode": {
            "description": "Has the value true if the object exists in `livemode` or the value false if the object exists in `testmode`.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "quote"
            ],
            "type": "string"
          },
          "rate": {
            "description": "Details of the sell amount and currency.",
            "properties": {
              "mid_market": {
                "description": "For reference purposes only. This rate represents the midpoint of the current bid and ask price.",
                "type": "string"
              },
              "user": {
                "description": "The returned FX quote.",
                "type": "string"
              }
            },
            "title": "QuoteRate",
            "type": "object"
          },
          "sell": {
            "description": "Details of the sell amount and currency.",
            "properties": {
              "amount": {
                "description": "Sell amount value.",
                "type": "string"
              },
              "currency": {
                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the amount currency.",
                "enum": [
                  "USD"
                ],
                "type": "string"
              }
            },
            "title": "QuoteSell",
            "type": "object"
          },
          "type": {
            "description": "Valid quote types.",
            "enum": [
              "payout_fx"
            ],
            "type": "string"
          }
        },
        "title": "Quote",
        "type": "object"
      },
      "receivable": {
        "description": "The receivable object represents an intent expressed by the user to accept funds from their partners. Typically, this intent is expressed by providing an underlying invoice for the desired inflow of funds.",
        "properties": {
          "account_id": {
            "description": "Unique identifier for the account object of `type=partner`.",
            "nullable": true,
            "type": "string"
          },
          "amount_locked": {
            "description": "Amount value locked, unavailable for reconciliation. This is a calculated field and is returned by XFlow.",
            "nullable": true,
            "type": "string"
          },
          "amount_maximum_reconcilable": {
            "description": "Maximum amount value that can be reconciled. This field can be edited by the user.",
            "nullable": true,
            "type": "string"
          },
          "amount_reconcilable": {
            "description": "Amount value that is available for reconciliation. This field is a calculated field and is returned by XFlow. The formula to calculate this value is `amount_reconcilable` = `amount_maximum_reconcilable` - (`amount_locked` + `amount_reconciled`)",
            "nullable": true,
            "type": "string"
          },
          "amount_reconciled": {
            "description": "Amount value that has been reconciled. This is a calculated field and is returned by XFlow. The formula to calculate this value is `amount_reconciled` = `amount_reconciled_not_settled` + `amount_settled_payouts` + fees",
            "nullable": true,
            "type": "string"
          },
          "amount_reconciled_not_settled": {
            "description": "Amount value that has been reconciled but not paid out. This is a calculated field and is returned by XFlow.",
            "nullable": true,
            "type": "string"
          },
          "amount_settled_payouts": {
            "description": "Amount value that has been transferred for payout. This is a calculated field and is returned by XFlow.",
            "nullable": true,
            "type": "string"
          },
          "created": {
            "description": "The seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time) at which the receivable object was created.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the amount currency.",
            "enum": [
              "USD"
            ],
            "nullable": true,
            "type": "string"
          },
          "deposit_ids_amount_locked": {
            "description": "Represents an array of deposit objects due to which amount is locked.",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "description": {
            "description": "Represents an array of deposit objects due to which amount is locked.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "invoice": {
            "description": "Relationship of the person with the account.",
            "properties": {
              "amount": {
                "description": "Total amount value on the invoice.",
                "nullable": true,
                "type": "string"
              },
              "creation_date": {
                "description": "The date on which the invoice was created in YYYY-MM-DD format.",
                "nullable": true,
                "type": "string"
              },
              "currency": {
                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the amount currency.",
                "nullable": true,
                "type": "string"
              },
              "document": {
                "description": "Represents a file object with invoice details.",
                "nullable": true,
                "type": "string"
              },
              "due_date": {
                "description": "The date on which the invoice amount is due in YYYY-MM-DD format.",
                "nullable": true,
                "type": "string"
              },
              "reference_number": {
                "description": "Unique identification number on the invoice.",
                "nullable": true,
                "type": "string"
              }
            },
            "title": "ReceivableInvoice",
            "nullable": true,
            "type": "object"
          },
          "livemode": {
            "description": "Has the value true if the object exists in `livemode` or the value false if the object exists in `testmode`.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://docs.xflowpay.com/2023-04-12/api#metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "title": "ReceivableMetadata",
            "nullable": true,
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "receivable"
            ],
            "type": "string"
          },
          "purpose_code": {
            "description": "[Purpose codes](https://www.rbi.org.in/upload/notification/pdfs/52220.pdf) defined by the Financial Regulator for cross-border transactions.",
            "type": "string"
          },
          "purpose_code_description": {
            "description": "Description of the purpose code.",
            "nullable": true,
            "type": "string"
          },
          "status": {
            "description": "Valid status for receivables.",
            "enum": [
              "draft",
              "verifying",
              "activated",
              "completed",
              "cancelled",
              "hold",
              "input_required"
            ],
            "type": "string"
          },
          "system_message": {
            "description": "Details regarding issues with the receivable.",
            "items": {
              "properties": {
                "code": {
                  "description": "Unique code for the message provided.",
                  "type": "string"
                },
                "message": {
                  "description": "Message against the corresponding unique code with action to be taken by the user.",
                  "type": "string"
                }
              },
              "title": "ReceivableSystemMessage",
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "transaction_type": {
            "description": "Receivable transaction type.",
            "enum": [
              "goods",
              "services",
              "software"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Receivable",
        "type": "object"
      },
      "transfer": {
        "description": "A transfer object models money movement within XFlow.",
        "properties": {
          "amount": {
            "description": "Amount value that will be deposited at the destination.",
            "type": "string"
          },
          "created": {
            "description": "The seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time) at which the transfer was created.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-digit code for the amount currency.",
            "enum": [
              "USD"
            ],
            "type": "string"
          },
          "description": {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "type": "string"
          },
          "from": {
            "description": "Details of the account and address from which the funds are being transferred.",
            "properties": {
              "account_id": {
                "description": "Account identifier for the account from which funds are being transferred. Refer [account object](https://docs.xflowpay.com/2023-04-12/api#accounts) for more details.",
                "nullable": true,
                "type": "string"
              },
              "address_id": {
                "description": "Address identifier of the account from which funds are being transferred. Refer [address object](https://docs.xflowpay.com/2023-04-12/api#addresses) for more details.",
                "nullable": true,
                "type": "string"
              }
            },
            "title": "TransferFrom",
            "nullable": true,
            "type": "object"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "livemode": {
            "description": "Has the value true if the object exists in `livemode` or the value false if the object exists in `testmode`.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://docs.xflowpay.com/2023-04-12/api#metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "title": "TransferMetadata",
            "nullable": true,
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "transfer"
            ],
            "type": "string"
          },
          "status": {
            "description": "Valid status types associated with transfer.",
            "enum": [
              "initialized",
              "processing",
              "completed"
            ],
            "type": "string"
          },
          "to": {
            "description": "Details of the account and address to which the transfer is being made.",
            "properties": {
              "account_id": {
                "description": "Account identifier for the account to which funds are being transferred. Refer [account object](https://docs.xflowpay.com/2023-04-12/api#accounts) for more details.",
                "nullable": true,
                "type": "string"
              },
              "address_id": {
                "description": "Address identifier of the account to which funds are being transferred. Refer [address object](https://docs.xflowpay.com/2023-04-12/api#addresses) for more details.",
                "nullable": true,
                "type": "string"
              }
            },
            "title": "TransferTo",
            "nullable": true,
            "type": "object"
          },
          "user_declaration": {
            "description": "File object providing details of the reason for the transfer to be created. This is applicable only for transfers between two different partners (this is an XFlow-Ops driven process for now).",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Transfer",
        "type": "object"
      },
      "webhook_endpoint": {
        "description": "You can configure webhook endpoints via the API to be notified about events that happen in your XFlow platform account, their connected accounts or in direct users (the latter is an XFlow account of `type=user` which is not connected to an account of `type=platform`).",
        "properties": {
          "created": {
            "description": "The seconds elapsed since [Unix epoch time](https://en.wikipedia.org/wiki/Unix_time) at which the WebhookEndpoint object was created.",
            "format": "unix-time",
            "type": "integer"
          },
          "description": {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "type": "string"
          },
          "enabled_events": {
            "description": "The list of events to enable for this endpoint. [’*’] indicates that all events are enabled.",
            "maxItems": 1,
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "livemode": {
            "description": "Has the value true if the object exists in `livemode` or the value false if the object exists in `testmode`.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://docs.xflowpay.com/2023-04-12/api#metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "title": "WebhookEndpointMetadata",
            "nullable": true,
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "webhook_endpoint"
            ],
            "type": "string"
          },
          "platform": {
            "description": "If `true`, the webhook endpoint will receive events for the platform. Else if `false`, the webhook endpoint will receive events for direct or connected users.",
            "type": "boolean"
          },
          "secret": {
            "description": "The endpoint’s [secret](https://docs.xflowpay.com/2023-04-12/guide#determining-the-expected-signature), used to generate webhook signatures. In livemode, the secret is returned only as part of the create response and in testmode, the secret is always available on the object.",
            "type": "string"
          },
          "status": {
            "description": "The status of the WebhookEndpoint.",
            "enum": [
              "activated",
              "deactivated"
            ],
            "type": "string"
          },
          "url": {
            "description": "The https URL of the webhook endpoint.",
            "type": "string"
          }
        },
        "title": "WebhookEndpoint",
        "type": "object"
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "bearerFormat": "auth-scheme",
        "description": "Bearer HTTP authentication. Allowed headers-- Authorization: Bearer <api_key>",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}